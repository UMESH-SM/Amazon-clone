[{"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\index.js":"1","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\App.js":"2","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Header.js":"3","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Carousel.js":"4","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Product.js":"5","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Home.js":"6","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Cart.js":"7","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\CartProduct.js":"8","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Subtotal.js":"9","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Signin.js":"10","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\ProductContext.js":"11","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CartContext.js":"12","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Delivery.js":"13","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Address.js":"14","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\NewAddress.js":"15","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\AddressContext.js":"16","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditAddress.js":"17","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeliveryStepper.js":"18","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Payment.js":"19","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CardsContext.js":"20","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Card.js":"21","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\PlaceOrder.js":"22","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderSummary.js":"23","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ReviewProduct.js":"24","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\OrdersContext.js":"25","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderPlaced.js":"26","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Orders.js":"27","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderDetails.js":"28","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover.js":"29","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover2.js":"30","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\firebase_config.js":"31","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SignUp.js":"32","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\UserContext.js":"33","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddressPage.js":"34","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddress.js":"35","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCardsPage.js":"36","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCard.js":"37","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAccount.js":"38","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SearchBox.js":"39","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\SearchContext.js":"40","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddProduct.js":"41","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditProduct.js":"42","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SnackBar.js":"43","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUserName.js":"44","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUsername.js":"45","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ConfirmBox.js":"46","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AlertBox.js":"47","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ProductDescription.js":"48"},{"size":1019,"mtime":1616232322573,"results":"49","hashOfConfig":"50"},{"size":5994,"mtime":1617427491490,"results":"51","hashOfConfig":"50"},{"size":14745,"mtime":1616828942855,"results":"52","hashOfConfig":"50"},{"size":3224,"mtime":1612427651513,"results":"53","hashOfConfig":"50"},{"size":4844,"mtime":1617427109817,"results":"54","hashOfConfig":"50"},{"size":19415,"mtime":1617447599277,"results":"55","hashOfConfig":"50"},{"size":1486,"mtime":1616830679291,"results":"56","hashOfConfig":"50"},{"size":4056,"mtime":1617351974664,"results":"57","hashOfConfig":"50"},{"size":2599,"mtime":1616830634211,"results":"58","hashOfConfig":"50"},{"size":3958,"mtime":1616847374179,"results":"59","hashOfConfig":"50"},{"size":373,"mtime":1616669756277,"results":"60","hashOfConfig":"50"},{"size":1233,"mtime":1614432227396,"results":"61","hashOfConfig":"50"},{"size":4070,"mtime":1616831884893,"results":"62","hashOfConfig":"50"},{"size":5884,"mtime":1616854217007,"results":"63","hashOfConfig":"50"},{"size":21491,"mtime":1616835276640,"results":"64","hashOfConfig":"50"},{"size":1178,"mtime":1614926774291,"results":"65","hashOfConfig":"50"},{"size":22725,"mtime":1616835302018,"results":"66","hashOfConfig":"50"},{"size":3025,"mtime":1616743927284,"results":"67","hashOfConfig":"50"},{"size":21534,"mtime":1616993299743,"results":"68","hashOfConfig":"50"},{"size":934,"mtime":1614492655686,"results":"69","hashOfConfig":"50"},{"size":595,"mtime":1612708648480,"results":"70","hashOfConfig":"50"},{"size":6983,"mtime":1617432359757,"results":"71","hashOfConfig":"50"},{"size":4028,"mtime":1616220929256,"results":"72","hashOfConfig":"50"},{"size":1091,"mtime":1616220904999,"results":"73","hashOfConfig":"50"},{"size":945,"mtime":1614499814422,"results":"74","hashOfConfig":"50"},{"size":1811,"mtime":1616833239067,"results":"75","hashOfConfig":"50"},{"size":803,"mtime":1616833274439,"results":"76","hashOfConfig":"50"},{"size":3738,"mtime":1616744819937,"results":"77","hashOfConfig":"50"},{"size":1674,"mtime":1614150578174,"results":"78","hashOfConfig":"50"},{"size":1556,"mtime":1614497943123,"results":"79","hashOfConfig":"50"},{"size":454,"mtime":1614158716361,"results":"80","hashOfConfig":"50"},{"size":7616,"mtime":1616850414427,"results":"81","hashOfConfig":"50"},{"size":367,"mtime":1614328981898,"results":"82","hashOfConfig":"50"},{"size":3990,"mtime":1616833639906,"results":"83","hashOfConfig":"50"},{"size":4856,"mtime":1616852780811,"results":"84","hashOfConfig":"50"},{"size":11148,"mtime":1616853892140,"results":"85","hashOfConfig":"50"},{"size":1152,"mtime":1616853970956,"results":"86","hashOfConfig":"50"},{"size":5846,"mtime":1616994504611,"results":"87","hashOfConfig":"50"},{"size":3270,"mtime":1616662428433,"results":"88","hashOfConfig":"50"},{"size":387,"mtime":1616668968873,"results":"89","hashOfConfig":"50"},{"size":10562,"mtime":1617448582184,"results":"90","hashOfConfig":"50"},{"size":10867,"mtime":1617447530412,"results":"91","hashOfConfig":"50"},{"size":1200,"mtime":1616835871004,"results":"92","hashOfConfig":"50"},{"size":2801,"mtime":1616844698079,"results":"93","hashOfConfig":"50"},{"size":3339,"mtime":1616847114273,"results":"94","hashOfConfig":"50"},{"size":1898,"mtime":1616851812034,"results":"95","hashOfConfig":"50"},{"size":1705,"mtime":1616993988763,"results":"96","hashOfConfig":"50"},{"size":2596,"mtime":1617431825145,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1hpmmet",{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\index.js",[],["211","212"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\App.js",["213","214","215","216","217","218"],"import React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { UserContext } from \"./contexts/UserContext\";\nimport { CartContext } from \"./contexts/CartContext\";\nimport { AddressContext } from \"./contexts/AddressContext\";\nimport { CardsContext } from \"./contexts/CardsContext\";\nimport { OrdersContext } from \"./contexts/OrdersContext\";\nimport { ProductContext } from \"./contexts/ProductContext\";\nimport { SearchContext } from \"./contexts/SearchContext\";\nimport Home from \"./components/Home\";\nimport Cart from \"./components/Cart\";\nimport Signin from \"./components/Signin\";\nimport SignUp from \"./components/SignUp\";\nimport Delivery from \"./components/Delivery\";\nimport Payment from \"./components/Payment\";\nimport PlaceOrder from \"./components/PlaceOrder\";\nimport OrderPlaced from \"./components/OrderPlaced\";\nimport Orders from \"./components/Orders\";\nimport ManageAccount from \"./components/ManageAccount\";\nimport ManageAddressPage from \"./components/ManageAddressPage\";\nimport ManageCardsPage from \"./components/ManageCardsPage\";\nimport AddProduct from \"./components/AddProduct\";\nimport { fire, db } from \"./firebase_config\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {\n  const [user, setUser] = useContext(UserContext);\n  const [cart, setCart] = useContext(CartContext);\n  const [address, setAddress] = useContext(AddressContext);\n  const [cards, setCards] = useContext(CardsContext);\n  const [orders, setOrders] = useContext(OrdersContext);\n  const [products, setProducts] = useContext(ProductContext);\n  const [search, setSearch] = useContext(SearchContext);\n\n  useEffect(() => {\n    db.collection(\"products\")\n      .doc(\"productsDoc\")\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          const products_info = doc.data();\n          setProducts(products_info);\n          let products_searchList = [];\n          products_info.productsList.forEach((categoryItem) => {\n            categoryItem.categoryItems.forEach((subcategoryItem) => {\n              products_searchList.push(subcategoryItem);\n            });\n          });\n          setSearch({\n            ...search,\n            searchProducts: products_searchList,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Products info fetch error in App: \", error);\n      });\n\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        db.collection(user.uid)\n          .doc(\"user-info\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const user_info = doc.data();\n              setUser({\n                name: user_info.name,\n                email: user_info.email,\n                uid: user.uid,\n              });\n            }\n          })\n          .catch((error) => {\n            console.log(\"User info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"cart\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const cart_info = doc.data();\n              setCart(cart_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Cart info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"address\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const address_info = doc.data();\n              setAddress(address_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Address info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"cards\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const cards_info = doc.data();\n              setCards(cards_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Cards info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"orders\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const orders_info = doc.data();\n              setOrders(orders_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Orders info fetch error in App: \", error);\n          });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/cart\">\n            {user.uid ? <Cart /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/delivery\">\n            {user.uid ? <Delivery /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/payment\">\n            {user.uid ? <Payment /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/place-order\">\n            {user.uid ? <PlaceOrder /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/order-placed\">\n            {user.uid ? <OrderPlaced /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/orders\">\n            {user.uid ? <Orders /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/manage-account\">\n            {user.uid ? <ManageAccount /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/manage-addresses\">\n            {user.uid ? <ManageAddressPage /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/manage-cards\">\n            {user.uid ? <ManageCardsPage /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/add-product\">\n            {user.uid === process.env.REACT_APP_ADMIN_ID ? (\n              <AddProduct />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Header.js",["219"],"import React, { useContext, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { AddressContext } from \"../contexts/AddressContext\";\r\nimport { SearchContext } from \"../contexts/SearchContext\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport { fire } from \"../firebase_config\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nfunction Header() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [address, setAddress] = useContext(AddressContext);\r\n  const [proceed, setProceed] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const [searchProductId, setSearchProductId] = useState(\"\");\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const [search, setSearch] = useContext(SearchContext);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"signin-popover\" : undefined;\r\n\r\n  const [anchorE2, setAnchorE2] = useState(null);\r\n  const open2 = Boolean(anchorE2);\r\n  const id2 = open2 ? \"address-popover\" : undefined;\r\n\r\n  const [anchorE3, setAnchorE3] = useState(null);\r\n  const open3 = Boolean(anchorE3);\r\n  const id3 = open3 ? \"category-popover\" : undefined;\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick2 = (event) => {\r\n    setAnchorE2(event.currentTarget);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setAnchorE2(null);\r\n  };\r\n\r\n  const handleClick3 = (event) => {\r\n    setAnchorE3(event.currentTarget);\r\n  };\r\n\r\n  const handleClose3 = () => {\r\n    setAnchorE3(null);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    setAnchorEl(null);\r\n    fire.auth().signOut();\r\n    setUser({\r\n      name: \"\",\r\n      email: \"\",\r\n      uid: \"\",\r\n    });\r\n    setCart({\r\n      items: [],\r\n      address: {\r\n        id: \"\",\r\n        name: \"\",\r\n        mobile: \"\",\r\n        houseNo: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        landmark: \"\",\r\n        pincode: \"\",\r\n        state: \"\",\r\n        country: \"\",\r\n      },\r\n      payment: {\r\n        type: \"\",\r\n        title: \"\",\r\n        value: \"\",\r\n      },\r\n      size: 0,\r\n      total: 0,\r\n    });\r\n  };\r\n\r\n  const handleSignin = () => {\r\n    setAnchorEl(null);\r\n    setProceed(true);\r\n  };\r\n\r\n  const handleSignin2 = () => {\r\n    setAnchorE2(null);\r\n    setProceed(true);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (value === \"\") {\r\n      if (search.searchResults.length) {\r\n        setSearch({\r\n          ...search,\r\n          searchResults: [],\r\n        });\r\n      }\r\n    } else if (selectedValue === value) {\r\n      if (searchProductId !== \"\") {\r\n        let filterSearch = [];\r\n        search.searchProducts.forEach((section) => {\r\n          section.subcategoryItems.forEach((item) => {\r\n            if (item.id === searchProductId) {\r\n              filterSearch.push(item);\r\n            }\r\n          });\r\n        });\r\n        setSearch({\r\n          ...search,\r\n          searchResults: filterSearch,\r\n        });\r\n      }\r\n    } else {\r\n      setSearchProductId(\"\");\r\n      if (value !== \"\") {\r\n        let regex = null;\r\n        if (value.length < 2) {\r\n          regex = new RegExp(\"^\" + value, \"i\");\r\n        } else {\r\n          regex = new RegExp(value, \"i\");\r\n        }\r\n        let filterSearch = [];\r\n        search.searchProducts.forEach((section) => {\r\n          section.subcategoryItems.forEach((item) => {\r\n            if (\r\n              regex.test(item.brand) ||\r\n              regex.test(item.category) ||\r\n              regex.test(item.subcategory) ||\r\n              regex.test(item.title)\r\n            ) {\r\n              filterSearch.push(item);\r\n            }\r\n          });\r\n        });\r\n        if (filterSearch.length) {\r\n          setSearch({\r\n            ...search,\r\n            searchResults: filterSearch,\r\n          });\r\n        } else {\r\n          setSearch({\r\n            ...search,\r\n            searchResults: [{ id: \"empty\" }],\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (window.location.pathname !== \"/\") {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const history = useHistory();\r\n  const handleRouteHome = () => {\r\n    if (value !== \"\") {\r\n      setValue(\"\");\r\n    }\r\n    if (search.searchResults.length) {\r\n      setSearch({\r\n        ...search,\r\n        searchResults: [],\r\n      });\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleCategory = (category) => {\r\n    setAnchorE3(null);\r\n    if (category === \"all\") {\r\n      handleRouteHome();\r\n    } else {\r\n      let filterSearch = [];\r\n      search.searchProducts.forEach((section) => {\r\n        section.subcategoryItems.forEach((item) => {\r\n          if (item.category === category) {\r\n            filterSearch.push(item);\r\n          }\r\n        });\r\n      });\r\n      setSearch({\r\n        ...search,\r\n        searchResults: filterSearch,\r\n      });\r\n    }\r\n  };\r\n\r\n  return proceed ? (\r\n    <Redirect to=\"/signin\" />\r\n  ) : (\r\n    <div className=\"header\">\r\n      <Button\r\n        onClick={handleRouteHome}\r\n        disableElevation=\"true\"\r\n        disableFocusRipple=\"true\"\r\n        disableRipple=\"true\"\r\n      >\r\n        <div className=\"header__logo\">\r\n          <img src=\"./amazon-logo.jpg\" alt=\"\" />\r\n        </div>\r\n      </Button>\r\n      <div className=\"select__locationBtn\">\r\n        <Button aria-describedby={id2} onClick={handleClick2}>\r\n          <div className=\"select__location\">\r\n            <div className=\"first__line\">\r\n              {user.uid && address.defaultAddress.id ? \"Deliver to\" : \"Hello\"}\r\n            </div>\r\n            <div className=\"second__line\">\r\n              <LocationOnOutlinedIcon fontSize=\"small\" />\r\n              <div className=\"bottom__line2\">\r\n                {user.uid && address.defaultAddress.id\r\n                  ? address.defaultAddress.name\r\n                  : \"Select your address\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Button>\r\n        <Popover\r\n          id={id2}\r\n          open={open2}\r\n          anchorEl={anchorE2}\r\n          onClose={handleClose2}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Typography className={classes.typography}>\r\n            {user.uid ? (\r\n              address.defaultAddress.id ? (\r\n                <>\r\n                  <div>{address.defaultAddress.name}</div>\r\n                  <div>{address.defaultAddress.houseNo}</div>\r\n                  <div>{address.defaultAddress.street}</div>\r\n                  <div>{address.defaultAddress.landmark}</div>\r\n                  <div>{address.defaultAddress.city}</div>\r\n                  <div>\r\n                    {address.defaultAddress.state} -{\" \"}\r\n                    {address.defaultAddress.pincode}\r\n                  </div>\r\n                  <div>{address.defaultAddress.country}</div>\r\n                  <div>Phone : {address.defaultAddress.mobile}</div>\r\n                  <div>\r\n                    <Link\r\n                      to=\"/manage-addresses\"\r\n                      className=\"header__changeDefaultAddressButton\"\r\n                    >\r\n                      <Button variant=\"contained\" size=\"small\">\r\n                        Change default address\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div>\r\n                  <Link to=\"/manage-addresses\" className=\"header__signinButton\">\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Set default address\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <div className=\"header__signinButton\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={handleSignin2}\r\n                >\r\n                  Sign in\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Typography>\r\n        </Popover>\r\n      </div>\r\n      <div className=\"header__search\">\r\n        <button\r\n          className=\"category__button\"\r\n          aria-describedby={id3}\r\n          onClick={handleClick3}\r\n        >\r\n          All<span className=\"down__arrow\">▼</span>\r\n        </button>\r\n        <Popover\r\n          id={id3}\r\n          open={open3}\r\n          anchorEl={anchorE3}\r\n          onClose={handleClose3}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Typography className={classes.typography}>\r\n            <div className=\"header__categoryButtons\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={() => handleCategory(\"all\")}\r\n              >\r\n                All\r\n              </Button>\r\n            </div>\r\n            <div className=\"header__categoryButtons\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={() => handleCategory(\"electronics\")}\r\n              >\r\n                Electronics\r\n              </Button>\r\n            </div>\r\n            <div className=\"header__categoryLastButton\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={() => handleCategory(\"clothing\")}\r\n              >\r\n                Clothing\r\n              </Button>\r\n            </div>\r\n          </Typography>\r\n        </Popover>\r\n        <SearchBox\r\n          value={value}\r\n          setValue={setValue}\r\n          searchProducts={search.searchProducts}\r\n          setSearchProductId={setSearchProductId}\r\n          setSelectedValue={setSelectedValue}\r\n          handleSearch={handleSearch}\r\n        />\r\n        <button className=\"search__button\" onClick={handleSearch}>\r\n          <SearchIcon />\r\n        </button>\r\n      </div>\r\n      <div className=\"header__nav\">\r\n        <div className=\"country__option\">\r\n          <img className=\"india__flag\" src=\"india-flag.png\" alt=\"\" />\r\n          <span className=\"down__arrow small__arrow\">▼</span>\r\n        </div>\r\n\r\n        <Button aria-describedby={id} onClick={handleClick}>\r\n          <div className=\"nav__option\">\r\n            <div className=\"top__line\">\r\n              Hello, {user.name ? user.name : \"Sign in\"}\r\n            </div>\r\n            <div className=\"bottom__line\">\r\n              Accounts & Lists\r\n              <span className=\"small__arrow align__arrow\">▼</span>\r\n            </div>\r\n          </div>\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Typography className={classes.typography}>\r\n            {user.uid ? (\r\n              <>\r\n                <div>\r\n                  <Link\r\n                    to=\"/manage-account\"\r\n                    className=\"header__manageAccountButton\"\r\n                  >\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Manage account\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link\r\n                    to=\"/manage-addresses\"\r\n                    className=\"header__manageAddressButton\"\r\n                  >\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Manage addresses\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link\r\n                    to=\"/manage-cards\"\r\n                    className=\"header__manageCardsButton\"\r\n                  >\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Manage cards\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                {user.uid === process.env.REACT_APP_ADMIN_ID ? (\r\n                  <div>\r\n                    <Link\r\n                      to=\"/add-product\"\r\n                      className=\"header__manageCardsButton\"\r\n                    >\r\n                      <Button variant=\"contained\" size=\"small\">\r\n                        Add Product\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                ) : null}\r\n                <div className=\"header__signoutButton\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    onClick={handleSignout}\r\n                  >\r\n                    Sign out\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"header__signinButton\">\r\n                <Button variant=\"contained\" size=\"small\" onClick={handleSignin}>\r\n                  Sign in\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Typography>\r\n        </Popover>\r\n\r\n        <div className=\"nav__option\">\r\n          <Link to={user.uid ? \"/orders\" : \"/signin\"}>\r\n            <div className=\"top__line\">Returns</div>\r\n            <div className=\"bottom__line\">& Orders</div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"cart__option\">\r\n          <Link to={user.uid ? \"/cart\" : \"/signin\"}>\r\n            <div className=\"cart__count\">{cart.size}</div>\r\n            <ShoppingCartOutlinedIcon\r\n              style={{ fontSize: 35, color: \"white\" }}\r\n            />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Carousel.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Product.js",["220","221"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Product.css\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport EditProduct from \"./EditProduct\";\r\nimport ProductDescription from \"./ProductDescription\";\r\n\r\nfunction Product({ item, handleEditProduct, handleSnackbarAlert }) {\r\n  const {\r\n    id,\r\n    title,\r\n    searchName,\r\n    image,\r\n    rating,\r\n    reviews,\r\n    price,\r\n    category,\r\n    subcategory,\r\n    brand,\r\n  } = item;\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [proceed, setProceed] = useState(false);\r\n  const [productDescription, setProductDescription] = useState({\r\n    show: false,\r\n    item: item,\r\n  });\r\n\r\n  const getIndianRupeeFormat = (temp) => {\r\n    var x = temp;\r\n    x = x.toString();\r\n    var lastThree = x.substring(x.length - 3);\r\n    var otherNumbers = x.substring(0, x.length - 3);\r\n    if (otherNumbers !== \"\") lastThree = \",\" + lastThree;\r\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n    return res;\r\n  };\r\n\r\n  const handleAddToCart = () => {\r\n    if (user.uid) {\r\n      handleSnackbarAlert(searchName);\r\n      if (cart.size === 0) {\r\n        setCart({\r\n          ...cart,\r\n          items: [\r\n            {\r\n              id,\r\n              image,\r\n              title,\r\n              rating,\r\n              reviews,\r\n              price,\r\n              category,\r\n              subcategory,\r\n              brand,\r\n              quantity: 1,\r\n            },\r\n          ],\r\n          size: cart.size + 1,\r\n          total: cart.total + price,\r\n        });\r\n      } else {\r\n        let addedToCart = false;\r\n        cart.items.map((item) => {\r\n          if (item.id === id) {\r\n            setCart({\r\n              ...cart,\r\n              items: cart.items.map((item) => {\r\n                if (item.id === id) {\r\n                  return {\r\n                    ...item,\r\n                    quantity: item.quantity + 1,\r\n                  };\r\n                } else {\r\n                  return item;\r\n                }\r\n              }),\r\n              size: cart.size + 1,\r\n              total: cart.total + price,\r\n            });\r\n\r\n            addedToCart = true;\r\n          }\r\n        });\r\n        if (!addedToCart) {\r\n          setCart({\r\n            ...cart,\r\n            items: [\r\n              {\r\n                id,\r\n                image,\r\n                title,\r\n                rating,\r\n                reviews,\r\n                price,\r\n                category,\r\n                subcategory,\r\n                brand,\r\n                quantity: 1,\r\n              },\r\n              ...cart.items,\r\n            ],\r\n            size: cart.size + 1,\r\n            total: cart.total + price,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      setProceed(true);\r\n    }\r\n  };\r\n\r\n  const handleProductDescription = () => {\r\n    setProductDescription({\r\n      ...productDescription,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  return proceed ? (\r\n    <Redirect to=\"/signin\" />\r\n  ) : (\r\n    <div className=\"product\">\r\n      <div className=\"product__info\">\r\n        <div className=\"productinfo__title\">{title}</div>\r\n        <div className=\"productinfo__rating\">\r\n          {Array(rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <StarIcon key={i} />\r\n            ))}\r\n          {Array(5 - rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <StarBorderIcon key={i} />\r\n            ))}\r\n          &nbsp;<span className=\"reviews__arrow\">▾ </span>\r\n          <span className=\"productinfo__reviewscount\">\r\n            {getIndianRupeeFormat(reviews)}\r\n          </span>\r\n        </div>\r\n        <div className=\"productinfo__price\">\r\n          <span className=\"rupee__symbol\">₹</span> {getIndianRupeeFormat(price)}\r\n        </div>\r\n      </div>\r\n      <div className=\"product__image\" onClick={handleProductDescription}>\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n      <div className=\"productinfo__addtoCart\">\r\n        <Button variant=\"contained\" size=\"small\" onClick={handleAddToCart}>\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n      {user.uid === process.env.REACT_APP_ADMIN_ID ? (\r\n        <EditProduct item={item} handleEditProduct={handleEditProduct} />\r\n      ) : null}\r\n      {productDescription.show ? (\r\n        <ProductDescription\r\n          item={item}\r\n          productDescription={productDescription}\r\n          setProductDescription={setProductDescription}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Home.js",["222","223","224"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Cart.js",["225"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Cart.css\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport Header from \"./Header\";\r\nimport CartProduct from \"./CartProduct\";\r\nimport Subtotal from \"./Subtotal\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nfunction Cart() {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const handleSnackbarAlert = () => {\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: \"error\",\r\n      msg: \"Cart is empty.\",\r\n    });\r\n  };\r\n\r\n  window.scrollTo(0, 0);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"cart\">\r\n        <div className=\"cart__products\">\r\n          <div className=\"cart__title\">Shopping Cart</div>\r\n          {cart.size ? (\r\n            cart.items.map((item) => <CartProduct key={item.id} item={item} />)\r\n          ) : (\r\n            <div className=\"empty__note\">\r\n              <img src=\"empty-cart.png\" alt=\"\" />\r\n              <span>Your Amazon Basket is empty</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"subtotal__section\">\r\n          <Subtotal handleSnackbarAlert={handleSnackbarAlert} />\r\n        </div>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\CartProduct.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Subtotal.js",["226"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Subtotal.css\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport ErrorOutlinedIcon from \"@material-ui/icons/ErrorOutlined\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Subtotal({ handleSnackbarAlert }) {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [proceed, setProceed] = useState(false);\r\n\r\n  const handleProceedToBuy = () => {\r\n    if (cart.size) {\r\n      setProceed(true);\r\n    } else {\r\n      handleSnackbarAlert();\r\n    }\r\n  };\r\n\r\n  const getIndianRupeeFormat = (temp) => {\r\n    var x = temp;\r\n    x = x.toString();\r\n    var lastThree = x.substring(x.length - 3);\r\n    var otherNumbers = x.substring(0, x.length - 3);\r\n    if (otherNumbers !== \"\") {\r\n      lastThree = \",\" + lastThree;\r\n    }\r\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n    return res;\r\n  };\r\n\r\n  return proceed ? (\r\n    <Redirect to=\"/delivery\" />\r\n  ) : (\r\n    <div className=\"subtotal\">\r\n      {cart.total < 500 ? (\r\n        <div className=\"note\">\r\n          <ErrorOutlinedIcon style={{ color: \"#29a3a3\" }} /> Add{\" \"}\r\n          <span className=\"rupee__symbol\">₹</span> {500 - cart.total}\r\n          <span className=\"small__decimal\">.00</span> of eligible items to your\r\n          order to qualify for FREE Delivery. Details\r\n        </div>\r\n      ) : (\r\n        <div className=\"note\">\r\n          <CheckCircleIcon style={{ color: \"green\" }} /> Your order is eligible\r\n          for FREE Delivery. Select this option at checkout. Details\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"subtotal__price\">\r\n        Subtotal ({cart.size} item{cart.size > 1 ? \"s\" : null}):\r\n        <span className=\"rupee__symbol\"> {\"  ₹\"}</span>\r\n        <span className=\"price\">\r\n          {getIndianRupeeFormat(cart.total)}\r\n          <span className=\"small__decimal\">.00</span>\r\n        </span>\r\n      </div>\r\n      <div className=\"gift__box\">\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"primary\"\r\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            />\r\n          }\r\n          label=\"This order contains a gift\"\r\n        />\r\n      </div>\r\n      <div className=\"subtotal__proceedButton\">\r\n        <Button variant=\"contained\" size=\"small\" onClick={handleProceedToBuy}>\r\n          Proceed to Buy\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subtotal;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Signin.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\ProductContext.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CartContext.js",["227","228"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = (props) => {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useState({\r\n    items: [],\r\n    address: {\r\n      id: \"\",\r\n      name: \"\",\r\n      mobile: \"\",\r\n      houseNo: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      landmark: \"\",\r\n      pincode: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n    },\r\n    payment: {\r\n      type: \"\",\r\n      title: \"\",\r\n      value: \"\",\r\n    },\r\n    size: 0,\r\n    total: 0,\r\n  });\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"cart\")\r\n          .set(cart)\r\n          .catch((error) => {\r\n            console.error(\"Error adding cart details: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [cart]);\r\n\r\n  return (\r\n    <CartContext.Provider value={[cart, setCart]}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Delivery.js",["229"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Delivery.css\";\r\nimport Address from \"./Address\";\r\nimport NewAddress from \"./NewAddress\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport DeliveryStepper from \"./DeliveryStepper\";\r\nimport { AddressContext } from \"../contexts/AddressContext\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nfunction Delivery() {\r\n  const [edit, setEdit] = useState(false);\r\n  const [editId, setEditId] = useState(\"\");\r\n  const [address, setAddress] = useContext(AddressContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const handleEdit = (id) => {\r\n    setEditId(id);\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSnackbarAlert = (type, msg) => {\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: type,\r\n      msg: msg,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"delivery\">\r\n      <DeliveryStepper step={0} />\r\n\r\n      <div className=\"delivery__body\">\r\n        {edit ? null : (\r\n          <>\r\n            <div className=\"delivery__title\">Select a delivery address</div>\r\n            <div className=\"delivery__note\">\r\n              Is the address you'd like to use displayed below? If so, click the\r\n              corresponding \"Deliver to this address\" button. Or you can{\" \"}\r\n              <a href=\"#address\">enter a new delivery address.</a>\r\n            </div>\r\n            <div className=\"savedAddress__section\">\r\n              <div className=\"savedAddress__title\">Defaut address</div>\r\n              <div className=\"savedAddress__container\">\r\n                {address.defaultAddress && address.defaultAddress.id ? (\r\n                  <Address\r\n                    dfltAdrs={true}\r\n                    item={address.defaultAddress}\r\n                    handleEdit={handleEdit}\r\n                    handleSnackbarAlert={handleSnackbarAlert}\r\n                  />\r\n                ) : (\r\n                  <div className=\"empty__address\">\r\n                    <img src=\"empty-address.png\" alt=\"\" />\r\n                    <span>No default address.</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"horizontal__line\">\r\n              <hr></hr>\r\n            </div>\r\n            <div className=\"savedAddress__section\">\r\n              <div className=\"savedAddress__title\">Saved addresses</div>\r\n              <div className=\"savedAddress__container\">\r\n                {address.addressList && address.addressList.length ? (\r\n                  address.addressList.map((item) => (\r\n                    <Address\r\n                      key={item.id}\r\n                      dfltAdrs={false}\r\n                      item={item}\r\n                      handleEdit={handleEdit}\r\n                      handleSnackbarAlert={handleSnackbarAlert}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <div className=\"empty__address\">\r\n                    <img src=\"empty-address.png\" alt=\"\" />\r\n                    <span>No saved address.</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"horizontal__line\">\r\n              <hr></hr>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"newAdress__section\" id=\"address\">\r\n          <div className=\"newAddress__title\">\r\n            {edit ? \"Edit address\" : \"Add a new address\"}\r\n          </div>\r\n          <div className=\"newAddress__container\">\r\n            {edit ? (\r\n              <EditAddress\r\n                editId={editId}\r\n                setEdit={setEdit}\r\n                handleSnackbarAlert={handleSnackbarAlert}\r\n              />\r\n            ) : (\r\n              <NewAddress handleSnackbarAlert={handleSnackbarAlert} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Delivery;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Address.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\NewAddress.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\AddressContext.js",["230","231"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const AddressContext = createContext();\r\n\r\nexport const AddressProvider = (props) => {\r\n  const [address, setAddress] = useState({\r\n    addressList: [],\r\n    defaultAddress: {\r\n      id: \"\",\r\n      name: \"\",\r\n      mobile: \"\",\r\n      houseNo: \"\",\r\n      street: \"\",\r\n      landmark: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      pincode: \"\",\r\n      country: \"\",\r\n    },\r\n  });\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"address\")\r\n          .set(address)\r\n          .catch((error) => {\r\n            console.error(\"Error adding/editing address: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [address]);\r\n\r\n  return (\r\n    <AddressContext.Provider value={[address, setAddress]}>\r\n      {props.children}\r\n    </AddressContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditAddress.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeliveryStepper.js",["232"],"import React, { useState } from \"react\";\r\nimport \"./DeliveryStepper.css\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: 50,\r\n    height: 50,\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(255,153,0) 0%, rgb(255,153,0) 50%, rgb(255,153,0) 100%)\",\r\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(255,153,0) 0%, rgb(255,153,0) 50%, rgb(255,153,0) 100%)\",\r\n  },\r\n});\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(255,153,0) 0%,rgb(255,153,0) 50%,rgb(255,153,0) 100%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(255,153,0) 0%,rgb(255,153,0) 50%,rgb(255,153,0) 100%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <LocalShippingIcon style={{ color: \"black\" }} />,\r\n    2: <PaymentIcon style={{ color: \"black\" }} />,\r\n    3: <DoneOutlineIcon style={{ color: \"black\" }} />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSteps() {\r\n  return [\"DELIVERY\", \"PAYMENT\", \"PLACE ORDER\"];\r\n}\r\n\r\nfunction DeliveryStepper({ step }) {\r\n  const [activeStep, setActiveStep] = useState(step);\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <div className=\"delivery__stepper\">\r\n      <Link to=\"/\" className=\"delivery__stepperLink\">\r\n        <img src=\"amazon-logo2.png\" alt=\"\" />\r\n      </Link>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryStepper;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Payment.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CardsContext.js",["233","234"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const CardsContext = createContext();\r\n\r\nexport const CardsProvider = (props) => {\r\n  const [cards, setCards] = useState({\r\n    cardsList: [],\r\n  });\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"cards\")\r\n          .set(cards)\r\n          .catch((error) => {\r\n            console.error(\"Error adding card details: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [cards]);\r\n\r\n  return (\r\n    <CardsContext.Provider value={[cards, setCards]}>\r\n      {props.children}\r\n    </CardsContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Card.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\PlaceOrder.js",["235"],"import React, { useContext } from \"react\";\r\nimport \"./PlaceOrder.css\";\r\nimport DeliveryStepper from \"./DeliveryStepper\";\r\nimport OrderSummary from \"./OrderSummary\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport ReviewProduct from \"./ReviewProduct\";\r\n\r\nfunction PlaceOrder() {\r\n  const [cart, setCart] = useContext(CartContext);\r\n\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const weekDays = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ];\r\n\r\n  const today = new Date();\r\n  const dateToday = today.getDate();\r\n  const monthToday = today.getMonth();\r\n  const yearToday = today.getFullYear();\r\n  const dayToday = today.getDay();\r\n  const hoursToday = today.getHours();\r\n  const minutesToday = today.getMinutes();\r\n\r\n  let deliveryDate = dateToday + 4;\r\n  let deliveryMonth = monthToday;\r\n  let deliveryYear = yearToday;\r\n  let deliveryDay = dayToday + 4;\r\n\r\n  if (monthToday === 11) {\r\n    if (deliveryDate > 31) {\r\n      deliveryDate %= 31;\r\n      deliveryMonth = 0;\r\n      deliveryYear += 1;\r\n    }\r\n  } else if (monthToday === 1) {\r\n    if (deliveryDate > 28) {\r\n      deliveryDate %= 28;\r\n      deliveryMonth = 2;\r\n    }\r\n  } else if (\r\n    monthToday === 0 ||\r\n    monthToday === 2 ||\r\n    monthToday === 4 ||\r\n    monthToday === 6 ||\r\n    monthToday === 7 ||\r\n    monthToday === 9\r\n  ) {\r\n    if (deliveryDate > 31) {\r\n      deliveryDate %= 31;\r\n      deliveryMonth = monthToday + 1;\r\n    }\r\n  } else {\r\n    if (deliveryDate > 30) {\r\n      deliveryDate %= 30;\r\n      deliveryMonth = monthToday + 1;\r\n    }\r\n  }\r\n\r\n  if (deliveryDay > 6) {\r\n    deliveryDay %= 7;\r\n  }\r\n\r\n  return (\r\n    <div className=\"placeorder\">\r\n      <DeliveryStepper step={2} />\r\n      <div className=\"placeorder__body\">\r\n        <div className=\"placeorder__title\">Review your order</div>\r\n        <div className=\"placeorder__note\">\r\n          By placing your order, you agree to Amazon's privacy notice and\r\n          conditions of use.\r\n        </div>\r\n        <div className=\"placeorder__container\">\r\n          <div className=\"placeorder__leftContainer\">\r\n            <div className=\"placeorder__addressDetails\">\r\n              <div className=\"placeorder__shippingDetails\">\r\n                <div className=\"placeordershippingDetails__title\">\r\n                  Shipping address\r\n                </div>\r\n                <div>\r\n                  <div>{cart.address.name}</div>\r\n                  <div>{cart.address.houseNo}</div>\r\n                  <div>{cart.address.street}</div>\r\n                  <div>{cart.address.city}</div>\r\n                  <div>{cart.address.landmark}</div>\r\n                  <div>\r\n                    {cart.address.state} - {cart.address.pincode}\r\n                  </div>\r\n                  <div>{cart.address.country}</div>\r\n                  <div>Mobile: {cart.address.mobile}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"placeorder__paymentDetails\">\r\n                <div className=\"placeorderpaymentDetails__title\">\r\n                  Payment method\r\n                </div>\r\n                <div>\r\n                  <div>{cart.payment.title}</div>\r\n                  <div>\r\n                    {cart.payment.type.toLowerCase() === \"card\"\r\n                      ? \"xxxx xxxx xxxx \"\r\n                      : null}\r\n                    {cart.payment.value}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"placeorder__orderDetails\">\r\n              <div className=\"placeorder__deliveryDate\">\r\n                Delivery date:{\" \"}\r\n                {deliveryDate +\r\n                  \" \" +\r\n                  monthNames[deliveryMonth] +\r\n                  \" \" +\r\n                  deliveryYear}\r\n              </div>\r\n              <div className=\"placeorder__deliveryNote\">\r\n                If you order in the next {24 - hoursToday - 1} hrs and{\" \"}\r\n                {60 - minutesToday - 1} mins.\r\n              </div>\r\n              <div className=\"placeorder__itemDetailsContainer\">\r\n                <div className=\"placeorder__itemDetails\">\r\n                  {cart.items.map((item) => (\r\n                    <ReviewProduct key={item.id} item={item} />\r\n                  ))}\r\n                </div>\r\n                <div className=\"placeorder__deliveryDay\">\r\n                  <div className=\"deliveryday__title\">Delivery Details</div>\r\n                  <div>\r\n                    <span className=\"fontgreencolor\">\r\n                      {weekDays[deliveryDay]}\r\n                    </span>{\" \"}\r\n                    — ₹ 40<span className=\"small__decimal\">.00</span> FREE\r\n                    Delivery on eligible orders\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"placeorder__rightContainer\">\r\n            <OrderSummary\r\n              deliveryDate={deliveryDate}\r\n              deliveryMonth={deliveryMonth}\r\n              deliveryYear={deliveryYear}\r\n              todayDate={dateToday}\r\n              todayMonth={monthToday}\r\n              todayYear={yearToday}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"placeorder__footer\">\r\n          <div>\r\n            Need help? Check our{\" \"}\r\n            <span className=\"fontcolorblue\">help pages</span> or{\" \"}\r\n            <span className=\"fontcolorblue\">contact us 24x7</span>\r\n          </div>\r\n          <div>\r\n            When your order is placed, we'll send you an e-mail message\r\n            acknowledging receipt of your order. If you choose to pay using an\r\n            electronic payment method (credit card, debit card or net banking),\r\n            you will be directed to your bank's website to complete your\r\n            payment. Your contract to purchase an item will not be complete\r\n            until we receive your electronic payment and dispatch your item. If\r\n            you choose to pay using Pay on Delivery (POD), you can pay using\r\n            cash/card/net banking when you receive your item.\r\n          </div>\r\n          <div>\r\n            See Amazon.in's <span className=\"fontcolorblue\">Return Policy</span>\r\n            .\r\n          </div>\r\n          <div>\r\n            Go to the <span className=\"fontcolorblue\">Amazon.in homepage</span>{\" \"}\r\n            without completing your order.\r\n          </div>\r\n        </div>\r\n        <div className=\"placeorder__hr\">\r\n          <hr />\r\n        </div>\r\n        <div className=\"placeorder__copyright\">\r\n          <span className=\"fontcolorblue\">Conditions of Use</span> |{\"  \"}\r\n          <span className=\"fontcolorblue\">Privacy Notice</span> © 2012-2020,\r\n          Amazon.com, Inc. and its affiliates\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrder;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderSummary.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ReviewProduct.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\OrdersContext.js",["236","237"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const OrdersContext = createContext();\r\n\r\nexport const OrdersProvider = (props) => {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [orders, setOrders] = useState({\r\n    ordersList: [],\r\n  });\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"orders\")\r\n          .set(orders)\r\n          .catch((error) => {\r\n            console.error(\"Error adding order details: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [orders]);\r\n\r\n  return (\r\n    <OrdersContext.Provider value={[orders, setOrders]}>\r\n      {props.children}\r\n    </OrdersContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderPlaced.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Orders.js",["238"],"import React, { useContext } from \"react\";\r\nimport \"./Orders.css\";\r\nimport { OrdersContext } from \"../contexts/OrdersContext\";\r\nimport Header from \"./Header\";\r\nimport OrderDetails from \"./OrderDetails\";\r\n\r\nfunction Orders() {\r\n  const [orders, setOrders] = useContext(OrdersContext);\r\n\r\n  return (\r\n    <div className=\"orders\">\r\n      <Header />\r\n      {orders.ordersList && orders.ordersList.length ? (\r\n        <div className=\"orders__container\">\r\n          {orders.ordersList.map((order) => (\r\n            <OrderDetails key={order.id} order={order} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"orders__empty\">\r\n          <img src=\"ordersempty.png\" alt=\"\" />\r\n          <span>No Orders found.</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderDetails.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover2.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\firebase_config.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SignUp.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\UserContext.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddressPage.js",["239"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Delivery.css\";\r\nimport Header from \"./Header\";\r\nimport ManageAddress from \"./ManageAddress\";\r\nimport NewAddress from \"./NewAddress\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport { AddressContext } from \"../contexts/AddressContext\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nfunction ManageAddressPage() {\r\n  const [edit, setEdit] = useState(false);\r\n  const [editId, setEditId] = useState(\"\");\r\n  const [address, setAddress] = useContext(AddressContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const handleEdit = (id) => {\r\n    setEditId(id);\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSnackbarAlert = (type, msg) => {\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: type,\r\n      msg: msg,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"delivery\">\r\n      <Header />\r\n      <div className=\"delivery__body\">\r\n        {edit ? null : (\r\n          <>\r\n            <div className=\"delivery__title\">Manage addresses</div>\r\n            <div className=\"delivery__note\">\r\n              Is the address you'd like to use displayed below? If not, you can{\" \"}\r\n              <a href=\"#address\">enter a new delivery address.</a>\r\n            </div>\r\n            <div className=\"savedAddress__section\">\r\n              <div className=\"savedAddress__title\">Defaut address</div>\r\n              <div className=\"savedAddress__container\">\r\n                {address.defaultAddress && address.defaultAddress.id ? (\r\n                  <ManageAddress\r\n                    dfltAdrs={true}\r\n                    item={address.defaultAddress}\r\n                    handleEdit={handleEdit}\r\n                    handleSnackbarAlert={handleSnackbarAlert}\r\n                  />\r\n                ) : (\r\n                  <div className=\"empty__address\">\r\n                    <img src=\"empty-address.png\" alt=\"\" />\r\n                    <span>No default address.</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"horizontal__line\">\r\n              <hr></hr>\r\n            </div>\r\n            <div className=\"savedAddress__section\">\r\n              <div className=\"savedAddress__title\">Saved addresses</div>\r\n              <div className=\"savedAddress__container\">\r\n                {address.addressList && address.addressList.length ? (\r\n                  address.addressList.map((item) => (\r\n                    <ManageAddress\r\n                      key={item.id}\r\n                      dfltAdrs={false}\r\n                      item={item}\r\n                      handleEdit={handleEdit}\r\n                      handleSnackbarAlert={handleSnackbarAlert}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <div className=\"empty__address\">\r\n                    <img src=\"empty-address.png\" alt=\"\" />\r\n                    <span>No saved address.</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"horizontal__line\">\r\n              <hr></hr>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"newAdress__section\" id=\"address\">\r\n          <div className=\"newAddress__title\">\r\n            {edit ? \"Edit address\" : \"Add a new address\"}\r\n          </div>\r\n          <div className=\"newAddress__container\">\r\n            {edit ? (\r\n              <EditAddress\r\n                editId={editId}\r\n                setEdit={setEdit}\r\n                handleSnackbarAlert={handleSnackbarAlert}\r\n              />\r\n            ) : (\r\n              <NewAddress handleSnackbarAlert={handleSnackbarAlert} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageAddressPage;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddress.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCardsPage.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCard.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAccount.js",["240"],"import React, { useState, useContext } from \"react\";\r\nimport \"./ManageAccount.css\";\r\nimport Header from \"./Header\";\r\nimport EditUsername from \"./EditUsername\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { db, fire } from \"../firebase_config\";\r\nimport SnackBar from \"./SnackBar\";\r\nimport ConfirmBox from \"./ConfirmBox\";\r\nimport AlertBox from \"./AlertBox\";\r\n\r\nfunction ManageAccount() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n  const [confirmbox, setConfirmbox] = useState({\r\n    show: false,\r\n    title: \"\",\r\n    text: \"\",\r\n    ok: \"\",\r\n    no: \"\",\r\n  });\r\n  const [alertbox, setAlertbox] = useState({\r\n    show: false,\r\n    title: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const handleDeleteAccountConfirm = () => {\r\n    setConfirmbox({\r\n      show: true,\r\n      title: \"Delete account\",\r\n      text: \"Are you sure?\",\r\n      ok: \"Continue\",\r\n      no: \"cancel\",\r\n    });\r\n  };\r\n\r\n  const handleDeleteAccount = () => {\r\n    const cur_user = fire.auth().currentUser;\r\n    const user_id = user.uid;\r\n\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: \"success\",\r\n      msg: \"Account deleted.\",\r\n    });\r\n    setTimeout(() => {\r\n      db.collection(user_id).doc(\"address\").delete();\r\n      db.collection(user_id).doc(\"cards\").delete();\r\n      db.collection(user_id).doc(\"cart\").delete();\r\n      db.collection(user_id).doc(\"orders\").delete();\r\n      db.collection(user_id)\r\n        .doc(\"user-info\")\r\n        .delete()\r\n        .then(() => {\r\n          setUser({\r\n            name: \"\",\r\n            email: \"\",\r\n            uid: \"\",\r\n          });\r\n          setCart({\r\n            items: [],\r\n            address: {\r\n              id: \"\",\r\n              name: \"\",\r\n              mobile: \"\",\r\n              houseNo: \"\",\r\n              street: \"\",\r\n              city: \"\",\r\n              landmark: \"\",\r\n              pincode: \"\",\r\n              state: \"\",\r\n              country: \"\",\r\n            },\r\n            payment: {\r\n              type: \"\",\r\n              title: \"\",\r\n              value: \"\",\r\n            },\r\n            size: 0,\r\n            total: 0,\r\n          });\r\n          fire\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n              cur_user\r\n                .delete()\r\n                .then(() => {\r\n                  console.log(\"Account deleted.\");\r\n                })\r\n                .catch((error) => {\r\n                  console.log(\"Error deleting account : \" + error);\r\n                });\r\n            });\r\n        });\r\n    }, 1500);\r\n  };\r\n\r\n  const handleResetPasswordConfirm = () => {\r\n    setConfirmbox({\r\n      show: true,\r\n      title: \"Reset password\",\r\n      text: \"Are you sure?\",\r\n      ok: \"Continue\",\r\n      no: \"cancel\",\r\n    });\r\n  };\r\n\r\n  const handleResetPassword = () => {\r\n    fire\r\n      .auth()\r\n      .sendPasswordResetEmail(user.email)\r\n      .then(() => {\r\n        setSnackbaralert({\r\n          show: true,\r\n          type: \"success\",\r\n          msg: \"Password reset email has been sent to \" + user.email,\r\n        });\r\n        setAlertbox({\r\n          show: true,\r\n          title: \"Reset password\",\r\n          text:\r\n            \"An email has been sent to \" +\r\n            user.email +\r\n            \". Please check spam folder if not found in inbox.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleConfirmBoxConfirm = () => {\r\n    setConfirmbox({\r\n      ...confirmbox,\r\n      show: false,\r\n    });\r\n    if (confirmbox.title === \"Delete account\") {\r\n      handleDeleteAccount();\r\n    }\r\n    if (confirmbox.title === \"Reset password\") {\r\n      handleResetPassword();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"manageaccount\">\r\n      <Header />\r\n      <div className=\"manageaccount__container\">\r\n        <div className=\"manageaccount__title\">Manage account</div>\r\n        <div className=\"manageaccount__details\">\r\n          <table>\r\n            <tr>\r\n              <th>NAME</th>\r\n              <td className=\"manageaccount__name\">\r\n                <input type=\"text\" name=\"name\" value={user.name} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>EMAIL</th>\r\n              <td className=\"manageaccount__email\">\r\n                <input type=\"text\" name=\"name\" value={user.email} />\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div className=\"manageaccount__buttons\">\r\n          <EditUsername oldUsername={user.name} />\r\n          <div className=\"manageaccount__editBtn\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleResetPasswordConfirm}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </div>\r\n          <div className=\"manageaccount__deleteBtn\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleDeleteAccountConfirm}\r\n            >\r\n              Delete account\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n      {confirmbox.show ? (\r\n        <ConfirmBox\r\n          confirmbox={confirmbox}\r\n          setConfirmbox={setConfirmbox}\r\n          handleConfirmBoxConfirm={handleConfirmBoxConfirm}\r\n        />\r\n      ) : null}\r\n      {alertbox.show ? (\r\n        <AlertBox alertbox={alertbox} setAlertbox={setAlertbox} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageAccount;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SearchBox.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\SearchContext.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddProduct.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditProduct.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SnackBar.js",["241"],"import React, { useEffect } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SnackBar({ snackbaralert, setSnackbaralert }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n    setTimeout(() => {\r\n      setSnackbaralert({\r\n        ...snackbaralert,\r\n        show: false,\r\n      });\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackbaralert.type}>\r\n          {snackbaralert.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUserName.js",["242"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUsername.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ConfirmBox.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AlertBox.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ProductDescription.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":35,"column":10,"nodeType":"249","messageId":"250","endLine":35,"endColumn":14},{"ruleId":"247","severity":1,"message":"251","line":36,"column":10,"nodeType":"249","messageId":"250","endLine":36,"endColumn":17},{"ruleId":"247","severity":1,"message":"252","line":37,"column":10,"nodeType":"249","messageId":"250","endLine":37,"endColumn":15},{"ruleId":"247","severity":1,"message":"253","line":38,"column":10,"nodeType":"249","messageId":"250","endLine":38,"endColumn":16},{"ruleId":"247","severity":1,"message":"254","line":39,"column":10,"nodeType":"249","messageId":"250","endLine":39,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":138,"column":6,"nodeType":"257","endLine":138,"endColumn":8,"suggestions":"258"},{"ruleId":"247","severity":1,"message":"259","line":23,"column":19,"nodeType":"249","messageId":"250","endLine":23,"endColumn":29},{"ruleId":"247","severity":1,"message":"260","line":25,"column":16,"nodeType":"249","messageId":"250","endLine":25,"endColumn":23},{"ruleId":"261","severity":1,"message":"262","line":68,"column":31,"nodeType":"263","messageId":"264","endLine":68,"endColumn":33},{"ruleId":"247","severity":1,"message":"265","line":15,"column":18,"nodeType":"249","messageId":"250","endLine":15,"endColumn":27},{"ruleId":"261","severity":1,"message":"262","line":74,"column":64,"nodeType":"263","messageId":"264","endLine":74,"endColumn":66},{"ruleId":"266","severity":1,"message":"267","line":124,"column":21,"nodeType":"268","messageId":"269","endLine":124,"endColumn":23},{"ruleId":"247","severity":1,"message":"270","line":10,"column":16,"nodeType":"249","messageId":"250","endLine":10,"endColumn":23},{"ruleId":"247","severity":1,"message":"270","line":10,"column":16,"nodeType":"249","messageId":"250","endLine":10,"endColumn":23},{"ruleId":"247","severity":1,"message":"260","line":14,"column":16,"nodeType":"249","messageId":"250","endLine":14,"endColumn":23},{"ruleId":"255","severity":1,"message":"271","line":52,"column":6,"nodeType":"257","endLine":52,"endColumn":12,"suggestions":"272"},{"ruleId":"247","severity":1,"message":"259","line":13,"column":19,"nodeType":"249","messageId":"250","endLine":13,"endColumn":29},{"ruleId":"247","severity":1,"message":"260","line":29,"column":16,"nodeType":"249","messageId":"250","endLine":29,"endColumn":23},{"ruleId":"255","severity":1,"message":"271","line":46,"column":6,"nodeType":"257","endLine":46,"endColumn":15,"suggestions":"273"},{"ruleId":"247","severity":1,"message":"274","line":88,"column":22,"nodeType":"249","messageId":"250","endLine":88,"endColumn":35},{"ruleId":"247","severity":1,"message":"260","line":17,"column":16,"nodeType":"249","messageId":"250","endLine":17,"endColumn":23},{"ruleId":"255","severity":1,"message":"271","line":34,"column":6,"nodeType":"257","endLine":34,"endColumn":13,"suggestions":"275"},{"ruleId":"247","severity":1,"message":"270","line":9,"column":16,"nodeType":"249","messageId":"250","endLine":9,"endColumn":23},{"ruleId":"247","severity":1,"message":"260","line":14,"column":16,"nodeType":"249","messageId":"250","endLine":14,"endColumn":23},{"ruleId":"255","severity":1,"message":"271","line":33,"column":6,"nodeType":"257","endLine":33,"endColumn":14,"suggestions":"276"},{"ruleId":"247","severity":1,"message":"277","line":8,"column":18,"nodeType":"249","messageId":"250","endLine":8,"endColumn":27},{"ruleId":"247","severity":1,"message":"259","line":13,"column":19,"nodeType":"249","messageId":"250","endLine":13,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":15,"column":10,"nodeType":"249","messageId":"250","endLine":15,"endColumn":14},{"ruleId":"255","severity":1,"message":"278","line":31,"column":6,"nodeType":"257","endLine":31,"endColumn":8,"suggestions":"279"},{"ruleId":"280","severity":2,"message":"281","line":91,"column":20,"nodeType":"249","messageId":"282","endLine":91,"endColumn":36},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-unused-vars","'cart' is assigned a value but never used.","Identifier","unusedVar","'address' is assigned a value but never used.","'cards' is assigned a value but never used.","'orders' is assigned a value but never used.","'products' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'search', 'setAddress', 'setCards', 'setCart', 'setOrders', 'setProducts', 'setSearch', and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["285"],"'setAddress' is assigned a value but never used.","'setUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setSearch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setCart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["286"],["287"],"'setActiveStep' is assigned a value but never used.",["288"],["289"],"'setOrders' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setSnackbaralert' and 'snackbaralert'. Either include them or remove the dependency array. If 'setSnackbaralert' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["290"],"no-undef","'handleNameChange' is not defined.","undef","no-global-assign","no-unsafe-negation",{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},"Update the dependencies array to be: [search, setAddress, setCards, setCart, setOrders, setProducts, setSearch, setUser]",{"range":"303","text":"304"},"Update the dependencies array to be: [cart, user.uid]",{"range":"305","text":"306"},"Update the dependencies array to be: [address, user.uid]",{"range":"307","text":"308"},"Update the dependencies array to be: [cards, user.uid]",{"range":"309","text":"310"},"Update the dependencies array to be: [orders, user.uid]",{"range":"311","text":"312"},"Update the dependencies array to be: [setSnackbaralert, snackbaralert]",{"range":"313","text":"314"},[4352,4354],"[search, setAddress, setCards, setCart, setOrders, setProducts, setSearch, setUser]",[1094,1100],"[cart, user.uid]",[1024,1033],"[address, user.uid]",[790,797],"[cards, user.uid]",[796,804],"[orders, user.uid]",[778,780],"[setSnackbaralert, snackbaralert]"]