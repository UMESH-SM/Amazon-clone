[{"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\index.js":"1","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\App.js":"2","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Header.js":"3","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Carousel.js":"4","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Product.js":"5","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Home.js":"6","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Cart.js":"7","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\CartProduct.js":"8","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Subtotal.js":"9","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Signin.js":"10","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\ProductContext.js":"11","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CartContext.js":"12","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Delivery.js":"13","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Address.js":"14","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\NewAddress.js":"15","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\AddressContext.js":"16","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditAddress.js":"17","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeliveryStepper.js":"18","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Payment.js":"19","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CardsContext.js":"20","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Card.js":"21","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\PlaceOrder.js":"22","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderSummary.js":"23","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ReviewProduct.js":"24","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\OrdersContext.js":"25","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderPlaced.js":"26","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Orders.js":"27","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderDetails.js":"28","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover.js":"29","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover2.js":"30","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\firebase_config.js":"31","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SignUp.js":"32","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\UserContext.js":"33","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddressPage.js":"34","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddress.js":"35","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCardsPage.js":"36","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCard.js":"37","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAccount.js":"38","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SearchBox.js":"39","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\SearchContext.js":"40","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddProduct.js":"41","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditProduct.js":"42","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SnackBar.js":"43","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUserName.js":"44","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUsername.js":"45","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ConfirmBox.js":"46","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AlertBox.js":"47","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ProductDescription.js":"48","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCategory.js":"49","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddCategory.js":"50","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeleteCategory.js":"51","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddSubcategory.js":"52","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeleteSubcategory.js":"53","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddBrand.js":"54","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeleteBrand.js":"55","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ForgotPassword.js":"56"},{"size":1019,"mtime":1616232322573,"results":"57","hashOfConfig":"58"},{"size":6426,"mtime":1617963457325,"results":"59","hashOfConfig":"58"},{"size":15613,"mtime":1617788896474,"results":"60","hashOfConfig":"58"},{"size":3292,"mtime":1617693637632,"results":"61","hashOfConfig":"58"},{"size":4963,"mtime":1617781428752,"results":"62","hashOfConfig":"58"},{"size":8016,"mtime":1617966598563,"results":"63","hashOfConfig":"58"},{"size":1531,"mtime":1617692087834,"results":"64","hashOfConfig":"58"},{"size":4243,"mtime":1617691013900,"results":"65","hashOfConfig":"58"},{"size":2717,"mtime":1617690782418,"results":"66","hashOfConfig":"58"},{"size":4155,"mtime":1617962808596,"results":"67","hashOfConfig":"58"},{"size":373,"mtime":1616669756277,"results":"68","hashOfConfig":"58"},{"size":1233,"mtime":1614432227396,"results":"69","hashOfConfig":"58"},{"size":4428,"mtime":1618212079837,"results":"70","hashOfConfig":"58"},{"size":5884,"mtime":1616854217007,"results":"71","hashOfConfig":"58"},{"size":21491,"mtime":1616835276640,"results":"72","hashOfConfig":"58"},{"size":1178,"mtime":1614926774291,"results":"73","hashOfConfig":"58"},{"size":22725,"mtime":1616835302018,"results":"74","hashOfConfig":"58"},{"size":3025,"mtime":1616743927284,"results":"75","hashOfConfig":"58"},{"size":21736,"mtime":1618212199213,"results":"76","hashOfConfig":"58"},{"size":934,"mtime":1614492655686,"results":"77","hashOfConfig":"58"},{"size":595,"mtime":1612708648480,"results":"78","hashOfConfig":"58"},{"size":7216,"mtime":1618212267411,"results":"79","hashOfConfig":"58"},{"size":4028,"mtime":1616220929256,"results":"80","hashOfConfig":"58"},{"size":1091,"mtime":1616220904999,"results":"81","hashOfConfig":"58"},{"size":945,"mtime":1614499814422,"results":"82","hashOfConfig":"58"},{"size":1811,"mtime":1616833239067,"results":"83","hashOfConfig":"58"},{"size":1293,"mtime":1617692004643,"results":"84","hashOfConfig":"58"},{"size":5306,"mtime":1617526353498,"results":"85","hashOfConfig":"58"},{"size":1674,"mtime":1614150578174,"results":"86","hashOfConfig":"58"},{"size":1556,"mtime":1614497943123,"results":"87","hashOfConfig":"58"},{"size":454,"mtime":1614158716361,"results":"88","hashOfConfig":"58"},{"size":7578,"mtime":1617695159975,"results":"89","hashOfConfig":"58"},{"size":367,"mtime":1614328981898,"results":"90","hashOfConfig":"58"},{"size":4115,"mtime":1617699222180,"results":"91","hashOfConfig":"58"},{"size":4929,"mtime":1617691857832,"results":"92","hashOfConfig":"58"},{"size":11221,"mtime":1617691951592,"results":"93","hashOfConfig":"58"},{"size":1152,"mtime":1616853970956,"results":"94","hashOfConfig":"58"},{"size":5722,"mtime":1617959650219,"results":"95","hashOfConfig":"58"},{"size":3270,"mtime":1616662428433,"results":"96","hashOfConfig":"58"},{"size":387,"mtime":1616668968873,"results":"97","hashOfConfig":"58"},{"size":11319,"mtime":1617956925208,"results":"98","hashOfConfig":"58"},{"size":11278,"mtime":1618213771276,"results":"99","hashOfConfig":"58"},{"size":1200,"mtime":1616835871004,"results":"100","hashOfConfig":"58"},{"size":2801,"mtime":1616844698079,"results":"101","hashOfConfig":"58"},{"size":3339,"mtime":1616847114273,"results":"102","hashOfConfig":"58"},{"size":1898,"mtime":1616851812034,"results":"103","hashOfConfig":"58"},{"size":1705,"mtime":1616993988763,"results":"104","hashOfConfig":"58"},{"size":2596,"mtime":1617688440951,"results":"105","hashOfConfig":"58"},{"size":7584,"mtime":1617951551095,"results":"106","hashOfConfig":"58"},{"size":4276,"mtime":1618212973367,"results":"107","hashOfConfig":"58"},{"size":4760,"mtime":1617947226441,"results":"108","hashOfConfig":"58"},{"size":4735,"mtime":1618213011212,"results":"109","hashOfConfig":"58"},{"size":6589,"mtime":1617953616719,"results":"110","hashOfConfig":"58"},{"size":4593,"mtime":1618213035636,"results":"111","hashOfConfig":"58"},{"size":5629,"mtime":1617953576903,"results":"112","hashOfConfig":"58"},{"size":2344,"mtime":1617965869989,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1hpmmet",{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"116"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"116"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\index.js",[],["245","246"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\App.js",["247","248","249","250","251","252"],"import React, { useContext, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { UserContext } from \"./contexts/UserContext\";\nimport { CartContext } from \"./contexts/CartContext\";\nimport { AddressContext } from \"./contexts/AddressContext\";\nimport { CardsContext } from \"./contexts/CardsContext\";\nimport { OrdersContext } from \"./contexts/OrdersContext\";\nimport { ProductContext } from \"./contexts/ProductContext\";\nimport { SearchContext } from \"./contexts/SearchContext\";\nimport Home from \"./components/Home\";\nimport Cart from \"./components/Cart\";\nimport Signin from \"./components/Signin\";\nimport SignUp from \"./components/SignUp\";\nimport Delivery from \"./components/Delivery\";\nimport Payment from \"./components/Payment\";\nimport PlaceOrder from \"./components/PlaceOrder\";\nimport OrderPlaced from \"./components/OrderPlaced\";\nimport Orders from \"./components/Orders\";\nimport ManageAccount from \"./components/ManageAccount\";\nimport ManageAddressPage from \"./components/ManageAddressPage\";\nimport ManageCardsPage from \"./components/ManageCardsPage\";\nimport AddProduct from \"./components/AddProduct\";\nimport ManageCategory from \"./components/ManageCategory\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport { fire, db } from \"./firebase_config\";\n\nrequire(\"dotenv\").config();\n\nfunction App() {\n  const [user, setUser] = useContext(UserContext);\n  const [cart, setCart] = useContext(CartContext);\n  const [address, setAddress] = useContext(AddressContext);\n  const [cards, setCards] = useContext(CardsContext);\n  const [orders, setOrders] = useContext(OrdersContext);\n  const [products, setProducts] = useContext(ProductContext);\n  const [search, setSearch] = useContext(SearchContext);\n\n  useEffect(() => {\n    db.collection(\"products\")\n      .doc(\"productsDoc\")\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          const products_info = doc.data();\n          setProducts(products_info);\n          let products_searchList = [];\n          products_info.productsList.forEach((categoryItem) => {\n            categoryItem.categoryItems.forEach((subcategoryItem) => {\n              products_searchList.push(subcategoryItem);\n            });\n          });\n          setSearch({\n            ...search,\n            searchProducts: products_searchList,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"Products info fetch error in App: \", error);\n      });\n\n    fire.auth().onAuthStateChanged((user) => {\n      if (user) {\n        db.collection(user.uid)\n          .doc(\"user-info\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const user_info = doc.data();\n              setUser({\n                name: user_info.name,\n                email: user_info.email,\n                uid: user.uid,\n              });\n            }\n          })\n          .catch((error) => {\n            console.log(\"User info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"cart\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const cart_info = doc.data();\n              setCart(cart_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Cart info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"address\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const address_info = doc.data();\n              setAddress(address_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Address info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"cards\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const cards_info = doc.data();\n              setCards(cards_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Cards info fetch error in App: \", error);\n          });\n\n        db.collection(user.uid)\n          .doc(\"orders\")\n          .get()\n          .then((doc) => {\n            if (doc.exists) {\n              const orders_info = doc.data();\n              setOrders(orders_info);\n            }\n          })\n          .catch((error) => {\n            console.log(\"Orders info fetch error in App: \", error);\n          });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/signin\">\n            <Signin />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/forgot-password\">\n            <ForgotPassword />\n          </Route>\n          <Route path=\"/cart\">\n            {user.uid ? <Cart /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/delivery\">\n            {user.uid ? <Delivery /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/payment\">\n            {user.uid ? <Payment /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/place-order\">\n            {user.uid ? <PlaceOrder /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/order-placed\">\n            {user.uid ? <OrderPlaced /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/orders\">\n            {user.uid ? <Orders /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/manage-account\">\n            {user.uid ? <ManageAccount /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/manage-addresses\">\n            {user.uid ? <ManageAddressPage /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/manage-cards\">\n            {user.uid ? <ManageCardsPage /> : <Redirect to=\"/\" />}\n          </Route>\n          <Route path=\"/add-product\">\n            {user.uid === process.env.REACT_APP_ADMIN_ID ? (\n              <AddProduct />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n          <Route path=\"/manage-categories\">\n            {user.uid === process.env.REACT_APP_ADMIN_ID ? (\n              <ManageCategory />\n            ) : (\n              <Redirect to=\"/\" />\n            )}\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Header.js",["253"],"import React, { useContext, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { AddressContext } from \"../contexts/AddressContext\";\r\nimport { SearchContext } from \"../contexts/SearchContext\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport { fire } from \"../firebase_config\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nfunction Header() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [address, setAddress] = useContext(AddressContext);\r\n  const [proceed, setProceed] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const [searchProductId, setSearchProductId] = useState(\"\");\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n  const [search, setSearch] = useContext(SearchContext);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"signin-popover\" : undefined;\r\n\r\n  const [anchorE2, setAnchorE2] = useState(null);\r\n  const open2 = Boolean(anchorE2);\r\n  const id2 = open2 ? \"address-popover\" : undefined;\r\n\r\n  const [anchorE3, setAnchorE3] = useState(null);\r\n  const open3 = Boolean(anchorE3);\r\n  const id3 = open3 ? \"category-popover\" : undefined;\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClick2 = (event) => {\r\n    setAnchorE2(event.currentTarget);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setAnchorE2(null);\r\n  };\r\n\r\n  const handleClick3 = (event) => {\r\n    setAnchorE3(event.currentTarget);\r\n  };\r\n\r\n  const handleClose3 = () => {\r\n    setAnchorE3(null);\r\n  };\r\n\r\n  const handleSignout = () => {\r\n    setAnchorEl(null);\r\n    fire.auth().signOut();\r\n    setUser({\r\n      name: \"\",\r\n      email: \"\",\r\n      uid: \"\",\r\n    });\r\n    setCart({\r\n      items: [],\r\n      address: {\r\n        id: \"\",\r\n        name: \"\",\r\n        mobile: \"\",\r\n        houseNo: \"\",\r\n        street: \"\",\r\n        city: \"\",\r\n        landmark: \"\",\r\n        pincode: \"\",\r\n        state: \"\",\r\n        country: \"\",\r\n      },\r\n      payment: {\r\n        type: \"\",\r\n        title: \"\",\r\n        value: \"\",\r\n      },\r\n      size: 0,\r\n      total: 0,\r\n    });\r\n  };\r\n\r\n  const handleSignin = () => {\r\n    setAnchorEl(null);\r\n    setProceed(true);\r\n  };\r\n\r\n  const handleSignin2 = () => {\r\n    setAnchorE2(null);\r\n    setProceed(true);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (value === \"\") {\r\n      if (search.searchResults.length) {\r\n        setSearch({\r\n          ...search,\r\n          searchResults: [],\r\n        });\r\n      }\r\n    } else if (selectedValue === value) {\r\n      if (searchProductId !== \"\") {\r\n        let filterSearch = [];\r\n        search.searchProducts.forEach((section) => {\r\n          section.subcategoryItems.forEach((item) => {\r\n            if (item.id === searchProductId) {\r\n              filterSearch.push(item);\r\n            }\r\n          });\r\n        });\r\n        setSearch({\r\n          ...search,\r\n          searchResults: filterSearch,\r\n        });\r\n      }\r\n    } else {\r\n      setSearchProductId(\"\");\r\n      if (value !== \"\") {\r\n        let regex = null;\r\n        if (value.length < 2) {\r\n          regex = new RegExp(\"^\" + value, \"i\");\r\n        } else {\r\n          regex = new RegExp(value, \"i\");\r\n        }\r\n        let filterSearch = [];\r\n        search.searchProducts.forEach((section) => {\r\n          section.subcategoryItems.forEach((item) => {\r\n            if (\r\n              regex.test(item.brand) ||\r\n              regex.test(item.category) ||\r\n              regex.test(item.subcategory) ||\r\n              regex.test(item.title)\r\n            ) {\r\n              filterSearch.push(item);\r\n            }\r\n          });\r\n        });\r\n        if (filterSearch.length) {\r\n          setSearch({\r\n            ...search,\r\n            searchResults: filterSearch,\r\n          });\r\n        } else {\r\n          setSearch({\r\n            ...search,\r\n            searchResults: [{ id: \"empty\" }],\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (window.location.pathname !== \"/\") {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const history = useHistory();\r\n  const handleRouteHome = () => {\r\n    if (value !== \"\") {\r\n      setValue(\"\");\r\n    }\r\n    if (search.searchResults.length) {\r\n      setSearch({\r\n        ...search,\r\n        searchResults: [],\r\n      });\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleCategory = (category) => {\r\n    setAnchorE3(null);\r\n    if (category === \"all\") {\r\n      handleRouteHome();\r\n    } else {\r\n      let filterSearch = [];\r\n      search.searchProducts.forEach((section) => {\r\n        section.subcategoryItems.forEach((item) => {\r\n          if (item.category === category) {\r\n            filterSearch.push(item);\r\n          }\r\n        });\r\n      });\r\n      setSearch({\r\n        ...search,\r\n        searchResults: filterSearch,\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return proceed ? (\r\n    <Redirect to=\"/signin\" />\r\n  ) : (\r\n    <div className=\"header\">\r\n      <Button\r\n        onClick={handleRouteHome}\r\n        disableElevation=\"true\"\r\n        disableFocusRipple=\"true\"\r\n        disableRipple=\"true\"\r\n      >\r\n        <div className=\"header__logo\">\r\n          <img src=\"./amazon-logo.jpg\" alt=\"\" />\r\n        </div>\r\n      </Button>\r\n      <div className=\"select__locationBtn\">\r\n        <Button aria-describedby={id2} onClick={handleClick2}>\r\n          <div className=\"select__location\">\r\n            <div className=\"first__line\">\r\n              {user.uid && address.defaultAddress.id ? \"Deliver to\" : \"Hello\"}\r\n            </div>\r\n            <div className=\"second__line\">\r\n              <LocationOnOutlinedIcon fontSize=\"small\" />\r\n              <div className=\"bottom__line2\">\r\n                {user.uid && address.defaultAddress.id\r\n                  ? address.defaultAddress.name\r\n                  : \"Select your address\"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Button>\r\n        <Popover\r\n          id={id2}\r\n          open={open2}\r\n          anchorEl={anchorE2}\r\n          onClose={handleClose2}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Typography className={classes.typography}>\r\n            {user.uid ? (\r\n              address.defaultAddress.id ? (\r\n                <>\r\n                  <div>{address.defaultAddress.name}</div>\r\n                  <div>{address.defaultAddress.houseNo}</div>\r\n                  <div>{address.defaultAddress.street}</div>\r\n                  <div>{address.defaultAddress.landmark}</div>\r\n                  <div>{address.defaultAddress.city}</div>\r\n                  <div>\r\n                    {address.defaultAddress.state} -{\" \"}\r\n                    {address.defaultAddress.pincode}\r\n                  </div>\r\n                  <div>{address.defaultAddress.country}</div>\r\n                  <div>Phone : {address.defaultAddress.mobile}</div>\r\n                  <div>\r\n                    <Link\r\n                      to=\"/manage-addresses\"\r\n                      className=\"header__changeDefaultAddressButton\"\r\n                    >\r\n                      <Button variant=\"contained\" size=\"small\">\r\n                        Change default address\r\n                      </Button>\r\n                    </Link>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div>\r\n                  <Link\r\n                    to=\"/manage-addresses\"\r\n                    className=\"header__signinsignoutButton\"\r\n                  >\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Set default address\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <div className=\"header__signinsignoutButton\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={handleSignin2}\r\n                >\r\n                  Sign in\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Typography>\r\n        </Popover>\r\n      </div>\r\n      <div className=\"header__search\">\r\n        <button\r\n          className=\"category__button\"\r\n          aria-describedby={id3}\r\n          onClick={handleClick3}\r\n        >\r\n          All<span className=\"down__arrow\">▼</span>\r\n        </button>\r\n        <Popover\r\n          id={id3}\r\n          open={open3}\r\n          anchorEl={anchorE3}\r\n          onClose={handleClose3}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Typography className={classes.typography}>\r\n            <div className=\"header__categoryButtons\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={() => handleCategory(\"all\")}\r\n              >\r\n                All\r\n              </Button>\r\n            </div>\r\n            <div className=\"header__categoryButtons\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={() => handleCategory(\"electronics\")}\r\n              >\r\n                Electronics\r\n              </Button>\r\n            </div>\r\n            <div className=\"header__categoryButtons\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={() => handleCategory(\"clothing\")}\r\n              >\r\n                Clothing\r\n              </Button>\r\n            </div>\r\n            <div className=\"header__categoryLastButton\">\r\n              <Button\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                onClick={() => handleCategory(\"footwear\")}\r\n              >\r\n                Footwear\r\n              </Button>\r\n            </div>\r\n          </Typography>\r\n        </Popover>\r\n        <SearchBox\r\n          value={value}\r\n          setValue={setValue}\r\n          searchProducts={search.searchProducts}\r\n          setSearchProductId={setSearchProductId}\r\n          setSelectedValue={setSelectedValue}\r\n          handleSearch={handleSearch}\r\n        />\r\n        <button className=\"search__button\" onClick={handleSearch}>\r\n          <SearchIcon />\r\n        </button>\r\n      </div>\r\n      <div className=\"header__nav\">\r\n        <div className=\"country__option\">\r\n          <img className=\"india__flag\" src=\"india-flag.png\" alt=\"\" />\r\n          <span className=\"down__arrow small__arrow\">▼</span>\r\n        </div>\r\n\r\n        <Button aria-describedby={id} onClick={handleClick}>\r\n          <div className=\"nav__option\">\r\n            <div className=\"top__line\">\r\n              Hello, {user.name ? user.name : \"Sign in\"}\r\n            </div>\r\n            <div className=\"bottom__line\">\r\n              Accounts & Lists\r\n              <span className=\"small__arrow align__arrow\">▼</span>\r\n            </div>\r\n          </div>\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <Typography className={classes.typography}>\r\n            {user.uid ? (\r\n              <>\r\n                <div>\r\n                  <Link\r\n                    to=\"/manage-account\"\r\n                    className=\"header__manageCardsButton\"\r\n                  >\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Manage account\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link\r\n                    to=\"/manage-addresses\"\r\n                    className=\"header__manageCardsButton\"\r\n                  >\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Manage addresses\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                <div>\r\n                  <Link\r\n                    to=\"/manage-cards\"\r\n                    className=\"header__manageCardsButton\"\r\n                  >\r\n                    <Button variant=\"contained\" size=\"small\">\r\n                      Manage cards\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n                {user.uid === process.env.REACT_APP_ADMIN_ID ? (\r\n                  <>\r\n                    <div>\r\n                      <Link\r\n                        to=\"/manage-categories\"\r\n                        className=\"header__manageCardsButton\"\r\n                      >\r\n                        <Button variant=\"contained\" size=\"small\">\r\n                          Manage Categories\r\n                        </Button>\r\n                      </Link>\r\n                    </div>\r\n                    <div>\r\n                      <Link\r\n                        to=\"/add-product\"\r\n                        className=\"header__manageCardsButton\"\r\n                      >\r\n                        <Button variant=\"contained\" size=\"small\">\r\n                          Add Product\r\n                        </Button>\r\n                      </Link>\r\n                    </div>\r\n                  </>\r\n                ) : null}\r\n                <div className=\"header__signinsignoutButton\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                    onClick={handleSignout}\r\n                  >\r\n                    Sign out\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"header__signinsignoutButton\">\r\n                <Button variant=\"contained\" size=\"small\" onClick={handleSignin}>\r\n                  Sign in\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </Typography>\r\n        </Popover>\r\n\r\n        <div className=\"nav__option\">\r\n          <Link to={user.uid ? \"/orders\" : \"/signin\"}>\r\n            <div className=\"top__line\">Returns</div>\r\n            <div className=\"bottom__line\">& Orders</div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"cart__option\">\r\n          <Link to={user.uid ? \"/cart\" : \"/signin\"}>\r\n            <div className=\"cart__count\">{cart.size}</div>\r\n            <ShoppingCartOutlinedIcon\r\n              style={{ fontSize: 35, color: \"white\" }}\r\n            />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Carousel.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Product.js",["254","255"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Product.css\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport EditProduct from \"./EditProduct\";\r\nimport ProductDescription from \"./ProductDescription\";\r\n\r\nfunction Product({\r\n  item,\r\n  handleEditProduct,\r\n  handleDeleteProduct,\r\n  handleSnackbarAlert,\r\n}) {\r\n  const {\r\n    id,\r\n    title,\r\n    searchName,\r\n    image,\r\n    rating,\r\n    reviews,\r\n    price,\r\n    category,\r\n    subcategory,\r\n    brand,\r\n  } = item;\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [proceed, setProceed] = useState(false);\r\n  const [productDescription, setProductDescription] = useState({\r\n    show: false,\r\n    item: item,\r\n  });\r\n\r\n  const getIndianRupeeFormat = (temp) => {\r\n    var x = temp;\r\n    x = x.toString();\r\n    var lastThree = x.substring(x.length - 3);\r\n    var otherNumbers = x.substring(0, x.length - 3);\r\n    if (otherNumbers !== \"\") lastThree = \",\" + lastThree;\r\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n    return res;\r\n  };\r\n\r\n  const handleAddToCart = () => {\r\n    if (user.uid) {\r\n      handleSnackbarAlert(searchName);\r\n      if (cart.size === 0) {\r\n        setCart({\r\n          ...cart,\r\n          items: [\r\n            {\r\n              id,\r\n              image,\r\n              title,\r\n              rating,\r\n              reviews,\r\n              price,\r\n              category,\r\n              subcategory,\r\n              brand,\r\n              quantity: 1,\r\n            },\r\n          ],\r\n          size: cart.size + 1,\r\n          total: cart.total + price,\r\n        });\r\n      } else {\r\n        let addedToCart = false;\r\n        cart.items.map((item) => {\r\n          if (item.id === id) {\r\n            setCart({\r\n              ...cart,\r\n              items: cart.items.map((item) => {\r\n                if (item.id === id) {\r\n                  return {\r\n                    ...item,\r\n                    quantity: item.quantity + 1,\r\n                  };\r\n                } else {\r\n                  return item;\r\n                }\r\n              }),\r\n              size: cart.size + 1,\r\n              total: cart.total + price,\r\n            });\r\n\r\n            addedToCart = true;\r\n          }\r\n        });\r\n        if (!addedToCart) {\r\n          setCart({\r\n            ...cart,\r\n            items: [\r\n              {\r\n                id,\r\n                image,\r\n                title,\r\n                rating,\r\n                reviews,\r\n                price,\r\n                category,\r\n                subcategory,\r\n                brand,\r\n                quantity: 1,\r\n              },\r\n              ...cart.items,\r\n            ],\r\n            size: cart.size + 1,\r\n            total: cart.total + price,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      setProceed(true);\r\n    }\r\n  };\r\n\r\n  const handleProductDescription = () => {\r\n    setProductDescription({\r\n      ...productDescription,\r\n      show: true,\r\n    });\r\n  };\r\n\r\n  return proceed ? (\r\n    <Redirect to=\"/signin\" />\r\n  ) : (\r\n    <div className=\"product\">\r\n      <div className=\"product__info\">\r\n        <div className=\"productinfo__title\">{title}</div>\r\n        <div className=\"productinfo__rating\">\r\n          {Array(rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <StarIcon key={i} />\r\n            ))}\r\n          {Array(5 - rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <StarBorderIcon key={i} />\r\n            ))}\r\n          &nbsp;<span className=\"reviews__arrow\">▾ </span>\r\n          <span className=\"productinfo__reviewscount\">\r\n            {getIndianRupeeFormat(reviews)}\r\n          </span>\r\n        </div>\r\n        <div className=\"productinfo__price\">\r\n          <span className=\"rupee__symbol\">₹</span> {getIndianRupeeFormat(price)}\r\n        </div>\r\n      </div>\r\n      <div className=\"product__image\" onClick={handleProductDescription}>\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n      <div className=\"productinfo__addtoCart\">\r\n        <Button variant=\"contained\" size=\"small\" onClick={handleAddToCart}>\r\n          Add to Cart\r\n        </Button>\r\n      </div>\r\n      {user.uid === process.env.REACT_APP_ADMIN_ID ? (\r\n        <EditProduct\r\n          item={item}\r\n          handleEditProduct={handleEditProduct}\r\n          handleDeleteProduct={handleDeleteProduct}\r\n        />\r\n      ) : null}\r\n      {productDescription.show ? (\r\n        <ProductDescription\r\n          item={item}\r\n          productDescription={productDescription}\r\n          setProductDescription={setProductDescription}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Home.js",["256","257"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\nimport { SearchContext } from \"../contexts/SearchContext\";\r\nimport Header from \"./Header\";\r\nimport Carousel from \"./Carousel\";\r\nimport Product from \"./Product\";\r\nimport { db } from \"../firebase_config\";\r\nimport SnackBar from \"./SnackBar\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n\r\nfunction Home() {\r\n  const [products, setProducts] = useContext(ProductContext);\r\n  const [search, setSearch] = useContext(SearchContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [search]);\r\n\r\n  const handleEditProduct = (\r\n    id,\r\n    oldCategory,\r\n    oldSubcategory,\r\n    displayName,\r\n    searchName,\r\n    imageUrl,\r\n    price,\r\n    rating,\r\n    reviews,\r\n    category,\r\n    subcategory,\r\n    brand\r\n  ) => {\r\n    let productsCopy = products;\r\n    productsCopy.productsList.forEach((categoryItem) => {\r\n      if (categoryItem.category === oldCategory) {\r\n        categoryItem.categoryItems.forEach((subcategoryItem) => {\r\n          if (subcategoryItem.subcategory === oldSubcategory) {\r\n            subcategoryItem.subcategoryItems.map((productItem) => {\r\n              if (productItem.id === id) {\r\n                productItem.title = displayName;\r\n                productItem.searchName = searchName;\r\n                productItem.image = imageUrl.split(\",\")[0];\r\n                productItem.images = imageUrl.split(\",\");\r\n                productItem.price = parseInt(price);\r\n                productItem.rating = parseInt(rating);\r\n                productItem.reviews = parseInt(reviews);\r\n                productItem.category = category;\r\n                productItem.subcategory = subcategory;\r\n                productItem.brand = brand;\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    db.collection(\"products\")\r\n      .doc(\"productsDoc\")\r\n      .set(productsCopy)\r\n      .then(() => {\r\n        console.log(\"Product updated.\");\r\n        setSnackbaralert({\r\n          show: true,\r\n          type: \"success\",\r\n          msg: searchName + \" updated.\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error editing product: \", error);\r\n      });\r\n\r\n    setProducts({\r\n      productsList: productsCopy.productsList,\r\n    });\r\n  };\r\n\r\n  const handleDeleteProduct = (category, subcategory, id, searchName) => {\r\n    let productsCopy = products;\r\n    productsCopy.productsList.forEach((categoryItem) => {\r\n      if (categoryItem.category === category) {\r\n        categoryItem.categoryItems.forEach((subcategoryItem) => {\r\n          if (subcategoryItem.subcategory === subcategory) {\r\n            subcategoryItem.subcategoryItems = subcategoryItem.subcategoryItems.filter(\r\n              (item) => item.id !== id\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    db.collection(\"products\")\r\n      .doc(\"productsDoc\")\r\n      .set(productsCopy)\r\n      .then(() => {\r\n        console.log(\"Product deleted.\");\r\n        setSnackbaralert({\r\n          show: true,\r\n          type: \"success\",\r\n          msg: searchName + \" deleted.\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting product: \", error);\r\n      });\r\n\r\n    setProducts({\r\n      productsList: productsCopy.productsList,\r\n    });\r\n  };\r\n\r\n  const handleSnackbarAlert = (searchName) => {\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: \"success\",\r\n      msg: searchName + \" added to cart.\",\r\n    });\r\n  };\r\n\r\n  const sideScroll = (element, direction, speed, distance, step) => {\r\n    var scrollAmount = 0;\r\n    var slideTimer = setInterval(function () {\r\n      if (direction === \"left\") {\r\n        element.scrollLeft -= step;\r\n      } else {\r\n        element.scrollLeft += step;\r\n      }\r\n      scrollAmount += step;\r\n      if (scrollAmount >= distance) {\r\n        window.clearInterval(slideTimer);\r\n      }\r\n    }, speed);\r\n  };\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  const categoryDisplay = (categoryItem, i) => {\r\n    let noSubcategories = true;\r\n    const subcategoryDisplay = categoryItem.categoryItems.map(\r\n      (subcategoryItem, j) => {\r\n        return subcategoryItem.subcategoryItems.length ? (\r\n          <div className=\"home__productsLayer\">\r\n            {(noSubcategories = false)}\r\n            <div className=\"home__productsSubcategory\">\r\n              {capitalizeFirstLetter(subcategoryItem.subcategory)}\r\n            </div>\r\n            <div\r\n              id={`home__productsContainer${i}${j}`}\r\n              className=\"home__productsContainer\"\r\n            >\r\n              {subcategoryItem.subcategoryItems.map((item) => (\r\n                <Product\r\n                  key={item.id}\r\n                  item={item}\r\n                  handleEditProduct={handleEditProduct}\r\n                  handleDeleteProduct={handleDeleteProduct}\r\n                  handleSnackbarAlert={handleSnackbarAlert}\r\n                />\r\n              ))}\r\n            </div>\r\n            <span\r\n              className=\"homeproductsContainer__LeftScroll\"\r\n              onClick={() => {\r\n                const container = document.getElementById(\r\n                  `home__productsContainer${i}${j}`\r\n                );\r\n                sideScroll(container, \"left\", 25, 1500, 60);\r\n              }}\r\n            >\r\n              <ChevronLeftIcon style={{ fontSize: \"3em\", color: \"grey\" }} />\r\n            </span>\r\n            <span\r\n              className=\"homeproductsContainer__RightScroll\"\r\n              onClick={() => {\r\n                const container = document.getElementById(\r\n                  `home__productsContainer${i}${j}`\r\n                );\r\n                sideScroll(container, \"right\", 25, 1500, 60);\r\n              }}\r\n            >\r\n              <ChevronRightIcon style={{ fontSize: \"3em\", color: \"grey\" }} />\r\n            </span>\r\n          </div>\r\n        ) : null;\r\n      }\r\n    );\r\n\r\n    if (noSubcategories) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"home__productsCategory\">\r\n          {capitalizeFirstLetter(categoryItem.category)}\r\n        </div>\r\n        {subcategoryDisplay}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return search.searchResults.length ? (\r\n    search.searchResults[0].id === \"empty\" ? (\r\n      <>\r\n        <Header />\r\n        <div className=\"home__empty\">\r\n          <img\r\n            src=\"https://cdn.dribbble.com/users/1554526/screenshots/3399669/no_results_found.png\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <Header />\r\n        <div className=\"home\">\r\n          <div className=\"home__searchProductsContainer\">\r\n            {search.searchResults.map((item) => (\r\n              <Product\r\n                key={item.id}\r\n                item={item}\r\n                handleEditProduct={handleEditProduct}\r\n                handleDeleteProduct={handleDeleteProduct}\r\n                handleSnackbarAlert={handleSnackbarAlert}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {snackbaralert.show ? (\r\n          <SnackBar\r\n            snackbaralert={snackbaralert}\r\n            setSnackbaralert={setSnackbaralert}\r\n          />\r\n        ) : null}\r\n      </>\r\n    )\r\n  ) : (\r\n    <>\r\n      <Header />\r\n      <Carousel />\r\n      <div className=\"home\">\r\n        {products.productsList.map((categoryItem, i) => {\r\n          return categoryDisplay(categoryItem, i);\r\n        })}\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Cart.js",["258"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./Cart.css\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport Header from \"./Header\";\r\nimport CartProduct from \"./CartProduct\";\r\nimport Subtotal from \"./Subtotal\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nfunction Cart() {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const handleSnackbarAlert = () => {\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: \"error\",\r\n      msg: \"Cart is empty.\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"cart\">\r\n        <div className=\"cart__products\">\r\n          <div className=\"cart__title\">Shopping Cart</div>\r\n          {cart.size ? (\r\n            cart.items.map((item) => <CartProduct key={item.id} item={item} />)\r\n          ) : (\r\n            <div className=\"empty__note\">\r\n              <img src=\"empty-cart.png\" alt=\"\" />\r\n              <span>Your Amazon Basket is empty</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"subtotal__section\">\r\n          <Subtotal handleSnackbarAlert={handleSnackbarAlert} />\r\n        </div>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\CartProduct.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Subtotal.js",["259"],"import React, { useState, useContext } from \"react\";\r\nimport \"./Subtotal.css\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport ErrorOutlinedIcon from \"@material-ui/icons/ErrorOutlined\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Subtotal({ handleSnackbarAlert }) {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [proceed, setProceed] = useState(false);\r\n\r\n  const handleProceedToBuy = () => {\r\n    if (cart.size) {\r\n      setProceed(true);\r\n    } else {\r\n      handleSnackbarAlert();\r\n    }\r\n  };\r\n\r\n  const getIndianRupeeFormat = (temp) => {\r\n    var x = temp;\r\n    x = x.toString();\r\n    var lastThree = x.substring(x.length - 3);\r\n    var otherNumbers = x.substring(0, x.length - 3);\r\n    if (otherNumbers !== \"\") {\r\n      lastThree = \",\" + lastThree;\r\n    }\r\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n    return res;\r\n  };\r\n\r\n  return proceed ? (\r\n    <Redirect to=\"/delivery\" />\r\n  ) : (\r\n    <div className=\"subtotal\">\r\n      {cart.total < 500 ? (\r\n        <div className=\"subtotal__note\">\r\n          <ErrorOutlinedIcon style={{ color: \"#29a3a3\" }} />\r\n          <span>\r\n            Add <span className=\"rupee__symbol\">₹</span> {500 - cart.total}\r\n            <span className=\"small__decimal\">.00</span> of eligible items to\r\n            your order to qualify for FREE Delivery. Details\r\n          </span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"subtotal__note\">\r\n          <CheckCircleIcon style={{ color: \"green\" }} />{\" \"}\r\n          <span>\r\n            Your order is eligible for FREE Delivery. Select this option at\r\n            checkout. Details\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"subtotal__price\">\r\n        Subtotal ({cart.size} item{cart.size > 1 ? \"s\" : null}) :\r\n        <span className=\"rupee__symbol\"> {\"   ₹ \"}</span>\r\n        <span className=\"price\">\r\n          {getIndianRupeeFormat(cart.total)}\r\n          <span className=\"small__decimal\">.00</span>\r\n        </span>\r\n      </div>\r\n      <div className=\"gift__box\">\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color=\"primary\"\r\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            />\r\n          }\r\n          label=\"This order contains a gift\"\r\n        />\r\n      </div>\r\n      <div className=\"subtotal__proceedButton\">\r\n        <Button variant=\"contained\" size=\"small\" onClick={handleProceedToBuy}>\r\n          Proceed to Buy\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subtotal;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Signin.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\ProductContext.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CartContext.js",["260","261"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nexport const CartProvider = (props) => {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useState({\r\n    items: [],\r\n    address: {\r\n      id: \"\",\r\n      name: \"\",\r\n      mobile: \"\",\r\n      houseNo: \"\",\r\n      street: \"\",\r\n      city: \"\",\r\n      landmark: \"\",\r\n      pincode: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n    },\r\n    payment: {\r\n      type: \"\",\r\n      title: \"\",\r\n      value: \"\",\r\n    },\r\n    size: 0,\r\n    total: 0,\r\n  });\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"cart\")\r\n          .set(cart)\r\n          .catch((error) => {\r\n            console.error(\"Error adding cart details: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [cart]);\r\n\r\n  return (\r\n    <CartContext.Provider value={[cart, setCart]}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Delivery.js",["262","263"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Address.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\NewAddress.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\AddressContext.js",["264","265"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const AddressContext = createContext();\r\n\r\nexport const AddressProvider = (props) => {\r\n  const [address, setAddress] = useState({\r\n    addressList: [],\r\n    defaultAddress: {\r\n      id: \"\",\r\n      name: \"\",\r\n      mobile: \"\",\r\n      houseNo: \"\",\r\n      street: \"\",\r\n      landmark: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      pincode: \"\",\r\n      country: \"\",\r\n    },\r\n  });\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"address\")\r\n          .set(address)\r\n          .catch((error) => {\r\n            console.error(\"Error adding/editing address: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [address]);\r\n\r\n  return (\r\n    <AddressContext.Provider value={[address, setAddress]}>\r\n      {props.children}\r\n    </AddressContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditAddress.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeliveryStepper.js",["266"],"import React, { useState } from \"react\";\r\nimport \"./DeliveryStepper.css\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#ccc\",\r\n    zIndex: 1,\r\n    color: \"#fff\",\r\n    width: 50,\r\n    height: 50,\r\n    display: \"flex\",\r\n    borderRadius: \"50%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  active: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(255,153,0) 0%, rgb(255,153,0) 50%, rgb(255,153,0) 100%)\",\r\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\r\n  },\r\n  completed: {\r\n    backgroundImage:\r\n      \"linear-gradient( 136deg, rgb(255,153,0) 0%, rgb(255,153,0) 50%, rgb(255,153,0) 100%)\",\r\n  },\r\n});\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(255,153,0) 0%,rgb(255,153,0) 50%,rgb(255,153,0) 100%)\",\r\n    },\r\n  },\r\n  completed: {\r\n    \"& $line\": {\r\n      backgroundImage:\r\n        \"linear-gradient( 95deg,rgb(255,153,0) 0%,rgb(255,153,0) 50%,rgb(255,153,0) 100%)\",\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: \"#eaeaf0\",\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector);\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles();\r\n  const { active, completed } = props;\r\n\r\n  const icons = {\r\n    1: <LocalShippingIcon style={{ color: \"black\" }} />,\r\n    2: <PaymentIcon style={{ color: \"black\" }} />,\r\n    3: <DoneOutlineIcon style={{ color: \"black\" }} />,\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction getSteps() {\r\n  return [\"DELIVERY\", \"PAYMENT\", \"PLACE ORDER\"];\r\n}\r\n\r\nfunction DeliveryStepper({ step }) {\r\n  const [activeStep, setActiveStep] = useState(step);\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <div className=\"delivery__stepper\">\r\n      <Link to=\"/\" className=\"delivery__stepperLink\">\r\n        <img src=\"amazon-logo2.png\" alt=\"\" />\r\n      </Link>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={activeStep}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryStepper;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Payment.js",["267"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\CardsContext.js",["268","269"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const CardsContext = createContext();\r\n\r\nexport const CardsProvider = (props) => {\r\n  const [cards, setCards] = useState({\r\n    cardsList: [],\r\n  });\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"cards\")\r\n          .set(cards)\r\n          .catch((error) => {\r\n            console.error(\"Error adding card details: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [cards]);\r\n\r\n  return (\r\n    <CardsContext.Provider value={[cards, setCards]}>\r\n      {props.children}\r\n    </CardsContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Card.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\PlaceOrder.js",["270","271"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderSummary.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ReviewProduct.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\OrdersContext.js",["272","273"],"import React, {\r\n  useState,\r\n  createContext,\r\n  useRef,\r\n  useEffect,\r\n  useContext,\r\n} from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { db } from \"../firebase_config\";\r\n\r\nexport const OrdersContext = createContext();\r\n\r\nexport const OrdersProvider = (props) => {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [orders, setOrders] = useState({\r\n    ordersList: [],\r\n  });\r\n  const didMountRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (user.uid) {\r\n      if (didMountRef.current) {\r\n        db.collection(user.uid)\r\n          .doc(\"orders\")\r\n          .set(orders)\r\n          .catch((error) => {\r\n            console.error(\"Error adding order details: \", error);\r\n          });\r\n      } else {\r\n        didMountRef.current = true;\r\n      }\r\n    }\r\n  }, [orders]);\r\n\r\n  return (\r\n    <OrdersContext.Provider value={[orders, setOrders]}>\r\n      {props.children}\r\n    </OrdersContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderPlaced.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\Orders.js",["274"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./Orders.css\";\r\nimport { OrdersContext } from \"../contexts/OrdersContext\";\r\nimport Header from \"./Header\";\r\nimport OrderDetails from \"./OrderDetails\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nfunction Orders() {\r\n  const [orders, setOrders] = useContext(OrdersContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"orders\">\r\n      <Header />\r\n      {orders.ordersList && orders.ordersList.length ? (\r\n        <div className=\"orders__container\">\r\n          {orders.ordersList.map((order) => (\r\n            <OrderDetails\r\n              key={order.id}\r\n              order={order}\r\n              setSnackbaralert={setSnackbaralert}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"orders__empty\">\r\n          <img src=\"ordersempty.png\" alt=\"\" />\r\n          <span>No Orders found.</span>\r\n        </div>\r\n      )}\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\OrderDetails.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SimplePopover2.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\firebase_config.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SignUp.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\UserContext.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddressPage.js",["275"],"import React, { useRef, useState, useContext } from \"react\";\r\nimport \"./Delivery.css\";\r\nimport Header from \"./Header\";\r\nimport ManageAddress from \"./ManageAddress\";\r\nimport NewAddress from \"./NewAddress\";\r\nimport EditAddress from \"./EditAddress\";\r\nimport { AddressContext } from \"../contexts/AddressContext\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nfunction ManageAddressPage() {\r\n  const [edit, setEdit] = useState(false);\r\n  const [editId, setEditId] = useState(\"\");\r\n  const [address, setAddress] = useContext(AddressContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n\r\n  const handleEdit = (id) => {\r\n    setEditId(id);\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleSnackbarAlert = (type, msg) => {\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: type,\r\n      msg: msg,\r\n    });\r\n  };\r\n\r\n  const myRef = useRef(null);\r\n\r\n  return (\r\n    <div className=\"delivery\">\r\n      <Header />\r\n      <div className=\"delivery__body\">\r\n        {edit ? null : (\r\n          <>\r\n            <div className=\"delivery__title\">Manage addresses</div>\r\n            <div className=\"delivery__note\">\r\n              Is the address you'd like to use displayed below? If not, you can{\" \"}\r\n              <span onClick={() => window.scrollTo(0, myRef.current.offsetTop)}>\r\n                enter a new delivery address.\r\n              </span>\r\n            </div>\r\n            <div className=\"savedAddress__section\">\r\n              <div className=\"savedAddress__title\">Defaut address</div>\r\n              <div className=\"savedAddress__container\">\r\n                {address.defaultAddress && address.defaultAddress.id ? (\r\n                  <ManageAddress\r\n                    dfltAdrs={true}\r\n                    item={address.defaultAddress}\r\n                    handleEdit={handleEdit}\r\n                    handleSnackbarAlert={handleSnackbarAlert}\r\n                  />\r\n                ) : (\r\n                  <div className=\"empty__address\">\r\n                    <img src=\"empty-address.png\" alt=\"\" />\r\n                    <span>No default address.</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"horizontal__line\">\r\n              <hr></hr>\r\n            </div>\r\n            <div className=\"savedAddress__section\">\r\n              <div className=\"savedAddress__title\">Saved addresses</div>\r\n              <div className=\"savedAddress__container\">\r\n                {address.addressList && address.addressList.length ? (\r\n                  address.addressList.map((item) => (\r\n                    <ManageAddress\r\n                      key={item.id}\r\n                      dfltAdrs={false}\r\n                      item={item}\r\n                      handleEdit={handleEdit}\r\n                      handleSnackbarAlert={handleSnackbarAlert}\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <div className=\"empty__address\">\r\n                    <img src=\"empty-address.png\" alt=\"\" />\r\n                    <span>No saved address.</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"horizontal__line\">\r\n              <hr></hr>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"newAddress__section\" ref={myRef}>\r\n          <div className=\"newAddress__title\">\r\n            {edit ? \"Edit address\" : \"Add a new address\"}\r\n          </div>\r\n          <div className=\"newAddress__container\">\r\n            {edit ? (\r\n              <EditAddress\r\n                editId={editId}\r\n                setEdit={setEdit}\r\n                handleSnackbarAlert={handleSnackbarAlert}\r\n              />\r\n            ) : (\r\n              <NewAddress handleSnackbarAlert={handleSnackbarAlert} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageAddressPage;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAddress.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCardsPage.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCard.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageAccount.js",["276"],"import React, { useState, useContext } from \"react\";\r\nimport \"./ManageAccount.css\";\r\nimport Header from \"./Header\";\r\nimport EditUsername from \"./EditUsername\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport { CartContext } from \"../contexts/CartContext\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { db, fire } from \"../firebase_config\";\r\nimport SnackBar from \"./SnackBar\";\r\nimport ConfirmBox from \"./ConfirmBox\";\r\nimport AlertBox from \"./AlertBox\";\r\n\r\nfunction ManageAccount() {\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n  const [confirmbox, setConfirmbox] = useState({\r\n    show: false,\r\n    title: \"\",\r\n    text: \"\",\r\n    ok: \"\",\r\n    no: \"\",\r\n  });\r\n  const [alertbox, setAlertbox] = useState({\r\n    show: false,\r\n    title: \"\",\r\n    text: \"\",\r\n  });\r\n\r\n  const handleDeleteAccountConfirm = () => {\r\n    setConfirmbox({\r\n      show: true,\r\n      title: \"Delete account\",\r\n      text: \"Are you sure?\",\r\n      ok: \"Continue\",\r\n      no: \"cancel\",\r\n    });\r\n  };\r\n\r\n  const handleDeleteAccount = () => {\r\n    const cur_user = fire.auth().currentUser;\r\n    const user_id = user.uid;\r\n\r\n    setSnackbaralert({\r\n      show: true,\r\n      type: \"success\",\r\n      msg: \"Account deleted.\",\r\n    });\r\n    setTimeout(() => {\r\n      db.collection(user_id).doc(\"address\").delete();\r\n      db.collection(user_id).doc(\"cards\").delete();\r\n      db.collection(user_id).doc(\"cart\").delete();\r\n      db.collection(user_id).doc(\"orders\").delete();\r\n      db.collection(user_id)\r\n        .doc(\"user-info\")\r\n        .delete()\r\n        .then(() => {\r\n          setUser({\r\n            name: \"\",\r\n            email: \"\",\r\n            uid: \"\",\r\n          });\r\n          setCart({\r\n            items: [],\r\n            address: {\r\n              id: \"\",\r\n              name: \"\",\r\n              mobile: \"\",\r\n              houseNo: \"\",\r\n              street: \"\",\r\n              city: \"\",\r\n              landmark: \"\",\r\n              pincode: \"\",\r\n              state: \"\",\r\n              country: \"\",\r\n            },\r\n            payment: {\r\n              type: \"\",\r\n              title: \"\",\r\n              value: \"\",\r\n            },\r\n            size: 0,\r\n            total: 0,\r\n          });\r\n          fire\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n              cur_user\r\n                .delete()\r\n                .then(() => {\r\n                  console.log(\"Account deleted.\");\r\n                })\r\n                .catch((error) => {\r\n                  console.log(\"Error deleting account : \" + error);\r\n                });\r\n            });\r\n        });\r\n    }, 1500);\r\n  };\r\n\r\n  const handleResetPasswordConfirm = () => {\r\n    setConfirmbox({\r\n      show: true,\r\n      title: \"Reset password\",\r\n      text: \"Are you sure?\",\r\n      ok: \"Continue\",\r\n      no: \"cancel\",\r\n    });\r\n  };\r\n\r\n  const handleResetPassword = () => {\r\n    fire\r\n      .auth()\r\n      .sendPasswordResetEmail(user.email)\r\n      .then(() => {\r\n        setSnackbaralert({\r\n          show: true,\r\n          type: \"success\",\r\n          msg: \"Password reset email has been sent to \" + user.email,\r\n        });\r\n        setAlertbox({\r\n          show: true,\r\n          title: \"Reset password\",\r\n          text:\r\n            \"An email has been sent to \" +\r\n            user.email +\r\n            \". Please check spam folder if not found in inbox.\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleConfirmBoxConfirm = () => {\r\n    setConfirmbox({\r\n      ...confirmbox,\r\n      show: false,\r\n    });\r\n    if (confirmbox.title === \"Delete account\") {\r\n      handleDeleteAccount();\r\n    }\r\n    if (confirmbox.title === \"Reset password\") {\r\n      handleResetPassword();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"manageaccount\">\r\n      <Header />\r\n      <div className=\"manageaccount__container\">\r\n        <div className=\"manageaccount__title\">Manage account</div>\r\n        <div className=\"manageaccount__details\">\r\n          <div>\r\n            <div className=\"manageaccount__label\">NAME</div>\r\n            <div className=\"manageaccount__value\">{user.name}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"manageaccount__label\">EMAIL</div>\r\n            <div className=\"manageaccount__value\">{user.email}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"manageaccount__buttons\">\r\n          <EditUsername oldUsername={user.name} />\r\n          <div className=\"manageaccount__editBtn\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleResetPasswordConfirm}\r\n            >\r\n              Reset Password\r\n            </Button>\r\n          </div>\r\n          <div className=\"manageaccount__deleteBtn\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              onClick={handleDeleteAccountConfirm}\r\n            >\r\n              Delete account\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n      {confirmbox.show ? (\r\n        <ConfirmBox\r\n          confirmbox={confirmbox}\r\n          setConfirmbox={setConfirmbox}\r\n          handleConfirmBoxConfirm={handleConfirmBoxConfirm}\r\n        />\r\n      ) : null}\r\n      {alertbox.show ? (\r\n        <AlertBox alertbox={alertbox} setAlertbox={setAlertbox} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageAccount;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SearchBox.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\contexts\\SearchContext.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddProduct.js",["277"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport \"./AddProduct.css\";\r\nimport Header from \"./Header\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../contexts/ProductContext\";\r\nimport { db } from \"../firebase_config\";\r\nimport SnackBar from \"./SnackBar\";\r\n\r\nfunction AddProduct() {\r\n  const [products, setProducts] = useContext(ProductContext);\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [rating, setRating] = useState(\"none\");\r\n  const [reviews, setReviews] = useState(\"\");\r\n  const [category, setCategory] = useState(\"none\");\r\n  const [subcategory, setSubcategory] = useState(\"none\");\r\n  const [brand, setBrand] = useState(\"none\");\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n  const [categories, setCategories] = useState(null);\r\n  const [categoriesList, setCategoriesList] = useState([]);\r\n  const [subcategoriesList, setSubcategoriesList] = useState([]);\r\n  const [brandsList, setBrandsList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    db.collection(\"products\")\r\n      .doc(\"info\")\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          const productsInfo = doc.data();\r\n          setCategories(productsInfo);\r\n          setCategoriesList(productsInfo.categoriesList);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Products info fetch error while adding products: \", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (category === \"none\") {\r\n      setSubcategoriesList([]);\r\n      setBrandsList([]);\r\n    } else {\r\n      categories &&\r\n        categories.categories.forEach((item) => {\r\n          if (item.category === category) {\r\n            setSubcategoriesList(item.subcategoriesList);\r\n            setBrandsList(item.brandsList);\r\n          }\r\n        });\r\n    }\r\n  }, [category]);\r\n\r\n  const handleAddProduct = (e) => {\r\n    e.preventDefault();\r\n    if (rating === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a rating.\",\r\n      });\r\n    } else if (category === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a category.\",\r\n      });\r\n    } else if (subcategory === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a subcategory.\",\r\n      });\r\n    } else if (brand === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a brand.\",\r\n      });\r\n    } else {\r\n      let productsCopy = products;\r\n      let newCategory = true;\r\n      let newSubcategory = true;\r\n      productsCopy.productsList.forEach((categoryItem) => {\r\n        if (categoryItem.category === category) {\r\n          newCategory = false;\r\n          categoryItem.categoryItems.forEach((subcategoryItem) => {\r\n            if (subcategoryItem.subcategory === subcategory) {\r\n              newSubcategory = false;\r\n              subcategoryItem.subcategoryItems.push({\r\n                id: category + \"_\" + subcategory + \"_\" + new Date().getTime(),\r\n                title: displayName,\r\n                searchName,\r\n                image: imageUrl.split(\",\")[0],\r\n                images: imageUrl.split(\",\"),\r\n                price: parseInt(price),\r\n                rating: parseInt(rating),\r\n                reviews: parseInt(reviews),\r\n                category,\r\n                subcategory,\r\n                brand,\r\n              });\r\n            }\r\n          });\r\n          if (newSubcategory) {\r\n            categoryItem.categoryItems.push({\r\n              subcategory: subcategory,\r\n              subcategoryItems: [\r\n                {\r\n                  id: category + \"_\" + subcategory + \"_\" + new Date().getTime(),\r\n                  title: displayName,\r\n                  searchName,\r\n                  image: imageUrl.split(\",\")[0],\r\n                  images: imageUrl.split(\",\"),\r\n                  price: parseInt(price),\r\n                  rating: parseInt(rating),\r\n                  reviews: parseInt(reviews),\r\n                  category,\r\n                  subcategory,\r\n                  brand,\r\n                },\r\n              ],\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      if (newCategory) {\r\n        productsCopy.productsList.push({\r\n          category: category,\r\n          categoryItems: [\r\n            {\r\n              subcategory: subcategory,\r\n              subcategoryItems: [\r\n                {\r\n                  id: category + \"_\" + subcategory + \"_\" + new Date().getTime(),\r\n                  title: displayName,\r\n                  searchName,\r\n                  image: imageUrl.split(\",\")[0],\r\n                  images: imageUrl.split(\",\"),\r\n                  price: parseInt(price),\r\n                  rating: parseInt(rating),\r\n                  reviews: parseInt(reviews),\r\n                  category,\r\n                  subcategory,\r\n                  brand,\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        });\r\n      }\r\n\r\n      setProducts(productsCopy);\r\n\r\n      db.collection(\"products\")\r\n        .doc(\"productsDoc\")\r\n        .set(productsCopy)\r\n        .then(() => {\r\n          console.log(\"Product added.\");\r\n          setSnackbaralert({\r\n            show: true,\r\n            type: \"success\",\r\n            msg: searchName + \" added.\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding/editing products: \", error);\r\n        });\r\n\r\n      clearInputs();\r\n    }\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setDisplayName(\"\");\r\n    setSearchName(\"\");\r\n    setImageUrl(\"\");\r\n    setPrice(\"\");\r\n    setReviews(\"\");\r\n  };\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"addproduct\">\r\n        <div className=\"addproduct__title\">Add product</div>\r\n        <form onSubmit={handleAddProduct}>\r\n          <div className=\"addproduct__container1\">\r\n            <div className=\"addproduct__input\">\r\n              <label>Display name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={displayName}\r\n                onChange={(e) => setDisplayName(e.target.value)}\r\n                minLength=\"10\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"addproduct__input\">\r\n              <label>Search name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={searchName}\r\n                onChange={(e) => setSearchName(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"addproduct__input\">\r\n              <label>\r\n                Images URLs (Enter all Images URLs seperated with commas)\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={imageUrl}\r\n                onChange={(e) => setImageUrl(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"addproduct__container2\">\r\n            <div className=\"addproduct__container3\">\r\n              <div className=\"addproduct__input\">\r\n                <label>\r\n                  Price <span className=\"rupee__symbol__large\">(₹)</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={price}\r\n                  pattern=\"[0-9]{1,7}\"\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"addproduct__input\">\r\n                <label>Rating</label>\r\n                <select\r\n                  defaultValue=\"none\"\r\n                  onChange={(e) => setRating(e.target.value)}\r\n                >\r\n                  <option value=\"none\">--- select ---</option>\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"0\">0</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"addproduct__input\">\r\n                <label>Reviews count</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={reviews}\r\n                  pattern=\"[0-9]+\"\r\n                  onChange={(e) => setReviews(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"addproduct__container4\">\r\n              <div className=\"addproduct__input\">\r\n                <label>Category</label>\r\n                <select\r\n                  defaultValue=\"none\"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                >\r\n                  <option value=\"none\">--- select ---</option>\r\n                  {categoriesList &&\r\n                    categoriesList.map((item, i) => (\r\n                      <option key={i} value={item}>\r\n                        {capitalizeFirstLetter(item)}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"addproduct__input\">\r\n                <label>Sub-category</label>\r\n                <select\r\n                  defaultValue=\"none\"\r\n                  onChange={(e) => setSubcategory(e.target.value)}\r\n                >\r\n                  <option value=\"none\">--- select ---</option>\r\n                  {subcategoriesList &&\r\n                    subcategoriesList.map((item, i) => (\r\n                      <option key={i} value={item}>\r\n                        {capitalizeFirstLetter(item)}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"addproduct__input\">\r\n                <label>Brand</label>\r\n                <select\r\n                  defaultValue=\"none\"\r\n                  onChange={(e) => setBrand(e.target.value)}\r\n                >\r\n                  <option value=\"none\">--- select ---</option>\r\n                  {brandsList &&\r\n                    brandsList.map((item, i) => (\r\n                      <option key={i} value={item}>\r\n                        {capitalizeFirstLetter(item)}\r\n                      </option>\r\n                    ))}\r\n                  <option value=\"others\">Others</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"addproduct__addButton\">\r\n            <Button type=\"submit\" variant=\"contained\" size=\"small\">\r\n              Add product\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddProduct;\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditProduct.js",["278","279"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\SnackBar.js",["280"],"import React, { useEffect } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SnackBar({ snackbaralert, setSnackbaralert }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n    setTimeout(() => {\r\n      setSnackbaralert({\r\n        ...snackbaralert,\r\n        show: false,\r\n      });\r\n    }, 3000);\r\n  }, []);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackbaralert.type}>\r\n          {snackbaralert.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUserName.js",["281"],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\EditUsername.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ConfirmBox.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AlertBox.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ProductDescription.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ManageCategory.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddCategory.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeleteCategory.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddSubcategory.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeleteSubcategory.js",["282"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddCategory.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport SnackBar from \"./SnackBar\";\r\nimport ConfirmBox from \"./ConfirmBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DeleteSubcategory({\r\n  oldCategories,\r\n  handleDeleteSubcategory,\r\n}) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [categoryName, setCategoryName] = useState(\"none\");\r\n  const [subcategoryName, setSubcategoryName] = useState(\"none\");\r\n  const [subcategoriesList, setSubcategoriesList] = useState([]);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n  const [confirmbox, setConfirmbox] = useState({\r\n    show: false,\r\n    title: \"\",\r\n    text: \"\",\r\n    ok: \"\",\r\n    no: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (categoryName === \"none\") {\r\n      setSubcategoriesList([]);\r\n    } else {\r\n      oldCategories &&\r\n        oldCategories.categories.forEach((item) => {\r\n          if (item.category === categoryName) {\r\n            setSubcategoriesList(item.subcategoriesList);\r\n          }\r\n        });\r\n    }\r\n  }, [categoryName]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDeleteSubcategoryRequest = (e) => {\r\n    e.preventDefault();\r\n    if (categoryName === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a Category.\",\r\n      });\r\n    } else if (subcategoryName === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a Subcategory.\",\r\n      });\r\n    } else if (\r\n      (categoryName === \"electronics\" ||\r\n        categoryName === \"clothing\" ||\r\n        categoryName === \"footwear\") &&\r\n      (subcategoryName === \"mobiles\" ||\r\n        subcategoryName === \"laptops\" ||\r\n        subcategoryName === \"tablets\" ||\r\n        subcategoryName === \"televisions\" ||\r\n        subcategoryName === \"shirts\" ||\r\n        subcategoryName === \"trousers\" ||\r\n        subcategoryName === \"jeans\" ||\r\n        subcategoryName === \"t-shirts\" ||\r\n        subcategoryName === \"shoes\" ||\r\n        subcategoryName === \"sandals\")\r\n    ) {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg:\r\n          \"Cannot delete subcategory '\" +\r\n          subcategoryName +\r\n          \"' from the Application.\",\r\n      });\r\n    } else {\r\n      setConfirmbox({\r\n        show: true,\r\n        title: \"Delete subcategory '\" + subcategoryName + \"'\",\r\n        text: \"Are you sure?\",\r\n        ok: \"Yes\",\r\n        no: \"No\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleConfirmBoxConfirm = () => {\r\n    setConfirmbox({\r\n      ...confirmbox,\r\n      show: false,\r\n    });\r\n    handleDeleteSubcategory(categoryName, subcategoryName);\r\n    setSubcategoriesList(\r\n      subcategoriesList.filter((item) => item !== subcategoryName)\r\n    );\r\n    handleClose();\r\n  };\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"manageaccount__editBtn\">\r\n        <Button variant=\"contained\" onClick={handleClickOpen}>\r\n          Delete Subcategory\r\n        </Button>\r\n      </div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <form onSubmit={handleDeleteSubcategoryRequest}>\r\n          <AppBar\r\n            className={classes.appBar}\r\n            style={{ backgroundColor: \"#232f3e\" }}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={handleCancelEdit}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Delete Subcategory\r\n              </Typography>\r\n              <Button autoFocus color=\"inherit\" type=\"submit\">\r\n                Delete\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className=\"addcategory\">\r\n            <div className=\"addcategory__inputFields\">\r\n              <label>Select Category name</label>\r\n              <select\r\n                defaultValue=\"none\"\r\n                onChange={(e) => setCategoryName(e.target.value)}\r\n              >\r\n                <option value=\"none\">--- select ---</option>\r\n                {oldCategories &&\r\n                  oldCategories.categoriesList.map((item) => (\r\n                    <option value={item}>{capitalizeFirstLetter(item)}</option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"addcategory__inputFields\">\r\n              <label>Select Subcategory name</label>\r\n              <select\r\n                defaultValue=\"none\"\r\n                onChange={(e) => setSubcategoryName(e.target.value)}\r\n              >\r\n                <option value=\"none\">--- select ---</option>\r\n                {subcategoriesList &&\r\n                  subcategoriesList.map((item) => (\r\n                    <option value={item}>{capitalizeFirstLetter(item)}</option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n      {confirmbox.show ? (\r\n        <ConfirmBox\r\n          confirmbox={confirmbox}\r\n          setConfirmbox={setConfirmbox}\r\n          handleConfirmBoxConfirm={handleConfirmBoxConfirm}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\AddBrand.js",[],"C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\DeleteBrand.js",["283"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddCategory.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport SnackBar from \"./SnackBar\";\r\nimport ConfirmBox from \"./ConfirmBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DeleteBrand({ oldCategories, handleDeleteBrand }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [categoryName, setCategoryName] = useState(\"none\");\r\n  const [brandName, setBrandName] = useState(\"none\");\r\n  const [brandsList, setBrandsList] = useState([]);\r\n  const [snackbaralert, setSnackbaralert] = useState({\r\n    show: false,\r\n    msg: \"\",\r\n    type: \"\",\r\n  });\r\n  const [confirmbox, setConfirmbox] = useState({\r\n    show: false,\r\n    title: \"\",\r\n    text: \"\",\r\n    ok: \"\",\r\n    no: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (categoryName === \"none\") {\r\n      setBrandsList([]);\r\n    } else {\r\n      oldCategories &&\r\n        oldCategories.categories.forEach((item) => {\r\n          if (item.category === categoryName) {\r\n            setBrandsList(item.brandsList);\r\n          }\r\n        });\r\n    }\r\n  }, [categoryName]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDeleteBrandRequest = (e) => {\r\n    e.preventDefault();\r\n    if (categoryName === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a Category.\",\r\n      });\r\n    } else if (brandName === \"none\") {\r\n      setSnackbaralert({\r\n        show: true,\r\n        type: \"error\",\r\n        msg: \"Please select a Brand.\",\r\n      });\r\n    } else {\r\n      setConfirmbox({\r\n        show: true,\r\n        title: \"Delete brand '\" + brandName + \"'\",\r\n        text: \"Are you sure?\",\r\n        ok: \"Yes\",\r\n        no: \"No\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleConfirmBoxConfirm = () => {\r\n    setConfirmbox({\r\n      ...confirmbox,\r\n      show: false,\r\n    });\r\n    handleDeleteBrand(categoryName, brandName);\r\n    setBrandsList(brandsList.filter((item) => item !== brandName));\r\n    handleClose();\r\n  };\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"manageaccount__editBtn\">\r\n        <Button variant=\"contained\" onClick={handleClickOpen}>\r\n          Delete Brand\r\n        </Button>\r\n      </div>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <form onSubmit={handleDeleteBrandRequest}>\r\n          <AppBar\r\n            className={classes.appBar}\r\n            style={{ backgroundColor: \"#232f3e\" }}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                onClick={handleCancelEdit}\r\n                aria-label=\"close\"\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Delete Brand\r\n              </Typography>\r\n              <Button autoFocus color=\"inherit\" type=\"submit\">\r\n                Delete\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className=\"addcategory\">\r\n            <div className=\"addcategory__inputFields\">\r\n              <label>Select Category name</label>\r\n              <select\r\n                defaultValue=\"none\"\r\n                onChange={(e) => setCategoryName(e.target.value)}\r\n              >\r\n                <option value=\"none\">--- select ---</option>\r\n                {oldCategories &&\r\n                  oldCategories.categoriesList.map((item) => (\r\n                    <option value={item}>{capitalizeFirstLetter(item)}</option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"addcategory__inputFields\">\r\n              <label>Select Brand name</label>\r\n              <select\r\n                defaultValue=\"none\"\r\n                onChange={(e) => setBrandName(e.target.value)}\r\n              >\r\n                <option value=\"none\">--- select ---</option>\r\n                {brandsList &&\r\n                  brandsList.map((item) => (\r\n                    <option value={item}>{capitalizeFirstLetter(item)}</option>\r\n                  ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Dialog>\r\n      {snackbaralert.show ? (\r\n        <SnackBar\r\n          snackbaralert={snackbaralert}\r\n          setSnackbaralert={setSnackbaralert}\r\n        />\r\n      ) : null}\r\n      {confirmbox.show ? (\r\n        <ConfirmBox\r\n          confirmbox={confirmbox}\r\n          setConfirmbox={setConfirmbox}\r\n          handleConfirmBoxConfirm={handleConfirmBoxConfirm}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\UmeshSM\\ReactApps\\amazon-clone\\src\\components\\ForgotPassword.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":37,"column":10,"nodeType":"290","messageId":"291","endLine":37,"endColumn":14},{"ruleId":"288","severity":1,"message":"292","line":38,"column":10,"nodeType":"290","messageId":"291","endLine":38,"endColumn":17},{"ruleId":"288","severity":1,"message":"293","line":39,"column":10,"nodeType":"290","messageId":"291","endLine":39,"endColumn":15},{"ruleId":"288","severity":1,"message":"294","line":40,"column":10,"nodeType":"290","messageId":"291","endLine":40,"endColumn":16},{"ruleId":"288","severity":1,"message":"295","line":41,"column":10,"nodeType":"290","messageId":"291","endLine":41,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":140,"column":6,"nodeType":"298","endLine":140,"endColumn":8,"suggestions":"299"},{"ruleId":"288","severity":1,"message":"300","line":23,"column":19,"nodeType":"290","messageId":"291","endLine":23,"endColumn":29},{"ruleId":"288","severity":1,"message":"301","line":30,"column":16,"nodeType":"290","messageId":"291","endLine":30,"endColumn":23},{"ruleId":"302","severity":1,"message":"303","line":73,"column":31,"nodeType":"304","messageId":"305","endLine":73,"endColumn":33},{"ruleId":"288","severity":1,"message":"306","line":15,"column":18,"nodeType":"290","messageId":"291","endLine":15,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":49,"column":64,"nodeType":"304","messageId":"305","endLine":49,"endColumn":66},{"ruleId":"288","severity":1,"message":"307","line":10,"column":16,"nodeType":"290","messageId":"291","endLine":10,"endColumn":23},{"ruleId":"288","severity":1,"message":"307","line":10,"column":16,"nodeType":"290","messageId":"291","endLine":10,"endColumn":23},{"ruleId":"288","severity":1,"message":"301","line":14,"column":16,"nodeType":"290","messageId":"291","endLine":14,"endColumn":23},{"ruleId":"296","severity":1,"message":"308","line":52,"column":6,"nodeType":"298","endLine":52,"endColumn":12,"suggestions":"309"},{"ruleId":"288","severity":1,"message":"300","line":14,"column":19,"nodeType":"290","messageId":"291","endLine":14,"endColumn":29},{"ruleId":"296","severity":1,"message":"310","line":28,"column":6,"nodeType":"298","endLine":28,"endColumn":8,"suggestions":"311"},{"ruleId":"288","severity":1,"message":"301","line":29,"column":16,"nodeType":"290","messageId":"291","endLine":29,"endColumn":23},{"ruleId":"296","severity":1,"message":"308","line":46,"column":6,"nodeType":"298","endLine":46,"endColumn":15,"suggestions":"312"},{"ruleId":"288","severity":1,"message":"313","line":88,"column":22,"nodeType":"290","messageId":"291","endLine":88,"endColumn":35},{"ruleId":"296","severity":1,"message":"310","line":33,"column":6,"nodeType":"298","endLine":33,"endColumn":8,"suggestions":"314"},{"ruleId":"288","severity":1,"message":"301","line":17,"column":16,"nodeType":"290","messageId":"291","endLine":17,"endColumn":23},{"ruleId":"296","severity":1,"message":"308","line":34,"column":6,"nodeType":"298","endLine":34,"endColumn":13,"suggestions":"315"},{"ruleId":"288","severity":1,"message":"307","line":10,"column":16,"nodeType":"290","messageId":"291","endLine":10,"endColumn":23},{"ruleId":"296","severity":1,"message":"310","line":19,"column":6,"nodeType":"298","endLine":19,"endColumn":8,"suggestions":"316"},{"ruleId":"288","severity":1,"message":"301","line":14,"column":16,"nodeType":"290","messageId":"291","endLine":14,"endColumn":23},{"ruleId":"296","severity":1,"message":"308","line":33,"column":6,"nodeType":"298","endLine":33,"endColumn":14,"suggestions":"317"},{"ruleId":"288","severity":1,"message":"318","line":9,"column":18,"nodeType":"290","messageId":"291","endLine":9,"endColumn":27},{"ruleId":"288","severity":1,"message":"300","line":13,"column":19,"nodeType":"290","messageId":"291","endLine":13,"endColumn":29},{"ruleId":"288","severity":1,"message":"289","line":15,"column":10,"nodeType":"290","messageId":"291","endLine":15,"endColumn":14},{"ruleId":"296","severity":1,"message":"319","line":60,"column":6,"nodeType":"298","endLine":60,"endColumn":16,"suggestions":"320"},{"ruleId":"296","severity":1,"message":"321","line":92,"column":6,"nodeType":"298","endLine":92,"endColumn":8,"suggestions":"322"},{"ruleId":"296","severity":1,"message":"319","line":107,"column":6,"nodeType":"298","endLine":107,"endColumn":16,"suggestions":"323"},{"ruleId":"296","severity":1,"message":"324","line":31,"column":6,"nodeType":"298","endLine":31,"endColumn":8,"suggestions":"325"},{"ruleId":"326","severity":2,"message":"327","line":91,"column":20,"nodeType":"290","messageId":"328","endLine":91,"endColumn":36},{"ruleId":"296","severity":1,"message":"329","line":62,"column":6,"nodeType":"298","endLine":62,"endColumn":20,"suggestions":"330"},{"ruleId":"296","severity":1,"message":"329","line":59,"column":6,"nodeType":"298","endLine":59,"endColumn":20,"suggestions":"331"},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"no-unused-vars","'cart' is assigned a value but never used.","Identifier","unusedVar","'address' is assigned a value but never used.","'cards' is assigned a value but never used.","'orders' is assigned a value but never used.","'products' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'search', 'setAddress', 'setCards', 'setCart', 'setOrders', 'setProducts', 'setSearch', and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["334"],"'setAddress' is assigned a value but never used.","'setUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setSearch' is assigned a value but never used.","'setCart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["336"],["337"],"'setActiveStep' is assigned a value but never used.",["338"],["339"],["340"],["341"],"'setOrders' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'categories' and 'category'. Either include them or remove the dependency array.",["343"],["344"],"React Hook useEffect has missing dependencies: 'setSnackbaralert' and 'snackbaralert'. Either include them or remove the dependency array. If 'setSnackbaralert' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["345"],"no-undef","'handleNameChange' is not defined.","undef","React Hook useEffect has a missing dependency: 'oldCategories'. Either include it or remove the dependency array.",["346"],["347"],"no-global-assign","no-unsafe-negation",{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"352","fix":"356"},{"desc":"357","fix":"358"},{"desc":"352","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"362","fix":"364"},{"desc":"362","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"368","fix":"370"},"Update the dependencies array to be: [search, setAddress, setCards, setCart, setOrders, setProducts, setSearch, setUser]",{"range":"371","text":"372"},"Update the dependencies array to be: [cart, user.uid]",{"range":"373","text":"374"},"Update the dependencies array to be: [history]",{"range":"375","text":"376"},"Update the dependencies array to be: [address, user.uid]",{"range":"377","text":"378"},{"range":"379","text":"376"},"Update the dependencies array to be: [cards, user.uid]",{"range":"380","text":"381"},{"range":"382","text":"376"},"Update the dependencies array to be: [orders, user.uid]",{"range":"383","text":"384"},"Update the dependencies array to be: [categories, category]",{"range":"385","text":"386"},{"range":"387","text":"386"},{"range":"388","text":"386"},"Update the dependencies array to be: [setSnackbaralert, snackbaralert]",{"range":"389","text":"390"},"Update the dependencies array to be: [categoryName, oldCategories]",{"range":"391","text":"392"},{"range":"393","text":"392"},[4468,4470],"[search, setAddress, setCards, setCart, setOrders, setProducts, setSearch, setUser]",[1094,1100],"[cart, user.uid]",[865,867],"[history]",[1024,1033],"[address, user.uid]",[1110,1112],[790,797],"[cards, user.uid]",[574,576],[796,804],"[orders, user.uid]",[2050,2060],"[categories, category]",[2965,2967],[3358,3368],[778,780],"[setSnackbaralert, snackbaralert]",[1859,1873],"[categoryName, oldCategories]",[1792,1806]]